{"version":3,"sources":["node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/helpers/normalizeHeaderName.js","node_modules/axios/lib/core/enhanceError.js","node_modules/axios/lib/core/createError.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/adapters/xhr.js","node_modules/process/browser.js","node_modules/axios/lib/defaults.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/cancel/Cancel.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/axios.js","node_modules/axios/index.js","js/utilities/booking/types.js","js/utilities/dom/toggleClassList.js","js/utilities/dom/toggleModal.js","js/utilities/booking/handleModal.js","js/utilities/booking/autofillForm.js","js/utilities/booking/validateBooking.js","js/utilities/booking/availableParty.js","js/utilities/booking/fetch.js","js/utilities/booking/findBooking.js","js/utilities/booking/editForm.js","node_modules/date-fns/esm/_lib/toInteger/index.js","node_modules/date-fns/esm/_lib/requiredArgs/index.js","node_modules/date-fns/esm/toDate/index.js","node_modules/date-fns/esm/addDays/index.js","node_modules/date-fns/esm/isValid/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","node_modules/date-fns/esm/locale/en-US/index.js","node_modules/date-fns/esm/addMilliseconds/index.js","node_modules/date-fns/esm/subMilliseconds/index.js","node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCWeek/index.js","node_modules/date-fns/esm/_lib/format/formatters/index.js","node_modules/date-fns/esm/_lib/format/longFormatters/index.js","node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","node_modules/date-fns/esm/_lib/protectedTokens/index.js","node_modules/date-fns/esm/format/index.js","js/utilities/booking/availableDates.js","js/utilities/booking/createDate.js","js/utilities/booking/submitBooking.js","node_modules/date-fns/esm/addMonths/index.js","node_modules/date-fns/esm/add/index.js","node_modules/date-fns/esm/isWeekend/index.js","node_modules/date-fns/esm/isSunday/index.js","node_modules/date-fns/esm/isSaturday/index.js","node_modules/date-fns/esm/addBusinessDays/index.js","node_modules/date-fns/esm/addHours/index.js","node_modules/date-fns/esm/startOfWeek/index.js","node_modules/date-fns/esm/startOfISOWeek/index.js","node_modules/date-fns/esm/getISOWeekYear/index.js","node_modules/date-fns/esm/startOfISOWeekYear/index.js","node_modules/date-fns/esm/startOfDay/index.js","node_modules/date-fns/esm/differenceInCalendarDays/index.js","node_modules/date-fns/esm/setISOWeekYear/index.js","node_modules/date-fns/esm/addISOWeekYears/index.js","node_modules/date-fns/esm/addMinutes/index.js","node_modules/date-fns/esm/addQuarters/index.js","node_modules/date-fns/esm/addSeconds/index.js","node_modules/date-fns/esm/addWeeks/index.js","node_modules/date-fns/esm/addYears/index.js","node_modules/date-fns/esm/areIntervalsOverlapping/index.js","node_modules/date-fns/esm/closestIndexTo/index.js","node_modules/date-fns/esm/closestTo/index.js","node_modules/date-fns/esm/compareAsc/index.js","node_modules/date-fns/esm/compareDesc/index.js","node_modules/date-fns/esm/isSameDay/index.js","node_modules/date-fns/esm/differenceInBusinessDays/index.js","node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js","node_modules/date-fns/esm/differenceInCalendarISOWeeks/index.js","node_modules/date-fns/esm/differenceInCalendarMonths/index.js","node_modules/date-fns/esm/getQuarter/index.js","node_modules/date-fns/esm/differenceInCalendarQuarters/index.js","node_modules/date-fns/esm/differenceInCalendarWeeks/index.js","node_modules/date-fns/esm/differenceInCalendarYears/index.js","node_modules/date-fns/esm/differenceInDays/index.js","node_modules/date-fns/esm/differenceInMilliseconds/index.js","node_modules/date-fns/esm/differenceInHours/index.js","node_modules/date-fns/esm/subISOWeekYears/index.js","node_modules/date-fns/esm/differenceInISOWeekYears/index.js","node_modules/date-fns/esm/differenceInMinutes/index.js","node_modules/date-fns/esm/differenceInMonths/index.js","node_modules/date-fns/esm/differenceInQuarters/index.js","node_modules/date-fns/esm/differenceInSeconds/index.js","node_modules/date-fns/esm/differenceInWeeks/index.js","node_modules/date-fns/esm/differenceInYears/index.js","node_modules/date-fns/esm/eachDayOfInterval/index.js","node_modules/date-fns/esm/eachHourOfInterval/index.js","node_modules/date-fns/esm/eachMonthOfInterval/index.js","node_modules/date-fns/esm/startOfQuarter/index.js","node_modules/date-fns/esm/eachQuarterOfInterval/index.js","node_modules/date-fns/esm/eachWeekOfInterval/index.js","node_modules/date-fns/esm/eachWeekendOfInterval/index.js","node_modules/date-fns/esm/startOfMonth/index.js","node_modules/date-fns/esm/endOfMonth/index.js","node_modules/date-fns/esm/eachWeekendOfMonth/index.js","node_modules/date-fns/esm/startOfYear/index.js","node_modules/date-fns/esm/endOfYear/index.js","node_modules/date-fns/esm/eachWeekendOfYear/index.js","node_modules/date-fns/esm/eachYearOfInterval/index.js","node_modules/date-fns/esm/endOfDay/index.js","node_modules/date-fns/esm/endOfDecade/index.js","node_modules/date-fns/esm/endOfHour/index.js","node_modules/date-fns/esm/endOfWeek/index.js","node_modules/date-fns/esm/endOfISOWeek/index.js","node_modules/date-fns/esm/endOfISOWeekYear/index.js","node_modules/date-fns/esm/endOfMinute/index.js","node_modules/date-fns/esm/endOfQuarter/index.js","node_modules/date-fns/esm/endOfSecond/index.js","node_modules/date-fns/esm/endOfToday/index.js","node_modules/date-fns/esm/endOfTomorrow/index.js","node_modules/date-fns/esm/endOfYesterday/index.js","node_modules/date-fns/esm/_lib/assign/index.js","node_modules/date-fns/esm/_lib/cloneObject/index.js","node_modules/date-fns/esm/formatDistance/index.js","node_modules/date-fns/esm/formatDistanceStrict/index.js","node_modules/date-fns/esm/formatDistanceToNow/index.js","node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","node_modules/date-fns/esm/formatDuration/index.js","node_modules/date-fns/esm/formatISO/index.js","node_modules/date-fns/esm/formatISO9075/index.js","node_modules/date-fns/esm/formatISODuration/index.js","node_modules/date-fns/esm/formatRFC3339/index.js","node_modules/date-fns/esm/formatRFC7231/index.js","node_modules/date-fns/esm/formatRelative/index.js","node_modules/date-fns/esm/fromUnixTime/index.js","node_modules/date-fns/esm/getDate/index.js","node_modules/date-fns/esm/getDay/index.js","node_modules/date-fns/esm/getDayOfYear/index.js","node_modules/date-fns/esm/getDaysInMonth/index.js","node_modules/date-fns/esm/isLeapYear/index.js","node_modules/date-fns/esm/getDaysInYear/index.js","node_modules/date-fns/esm/getDecade/index.js","node_modules/date-fns/esm/getHours/index.js","node_modules/date-fns/esm/getISODay/index.js","node_modules/date-fns/esm/getISOWeek/index.js","node_modules/date-fns/esm/getISOWeeksInYear/index.js","node_modules/date-fns/esm/getMilliseconds/index.js","node_modules/date-fns/esm/getMinutes/index.js","node_modules/date-fns/esm/getMonth/index.js","node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js","node_modules/date-fns/esm/getSeconds/index.js","node_modules/date-fns/esm/getTime/index.js","node_modules/date-fns/esm/getUnixTime/index.js","node_modules/date-fns/esm/getWeekYear/index.js","node_modules/date-fns/esm/startOfWeekYear/index.js","node_modules/date-fns/esm/getWeek/index.js","node_modules/date-fns/esm/getWeekOfMonth/index.js","node_modules/date-fns/esm/lastDayOfMonth/index.js","node_modules/date-fns/esm/getWeeksInMonth/index.js","node_modules/date-fns/esm/getYear/index.js","node_modules/date-fns/esm/subDays/index.js","node_modules/date-fns/esm/subMonths/index.js","node_modules/date-fns/esm/sub/index.js","node_modules/date-fns/esm/intervalToDuration/index.js","node_modules/date-fns/esm/isAfter/index.js","node_modules/date-fns/esm/isBefore/index.js","node_modules/date-fns/esm/isDate/index.js","node_modules/date-fns/esm/isEqual/index.js","node_modules/date-fns/esm/isExists/index.js","node_modules/date-fns/esm/isFirstDayOfMonth/index.js","node_modules/date-fns/esm/isFriday/index.js","node_modules/date-fns/esm/isFuture/index.js","node_modules/date-fns/esm/isLastDayOfMonth/index.js","node_modules/date-fns/esm/_lib/setUTCDay/index.js","node_modules/date-fns/esm/_lib/setUTCISODay/index.js","node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/setUTCWeek/index.js","node_modules/date-fns/esm/parse/_lib/parsers/index.js","node_modules/date-fns/esm/parse/index.js","node_modules/date-fns/esm/isMatch/index.js","node_modules/date-fns/esm/isMonday/index.js","node_modules/date-fns/esm/isPast/index.js","node_modules/date-fns/esm/startOfHour/index.js","node_modules/date-fns/esm/isSameHour/index.js","node_modules/date-fns/esm/isSameWeek/index.js","node_modules/date-fns/esm/isSameISOWeek/index.js","node_modules/date-fns/esm/isSameISOWeekYear/index.js","node_modules/date-fns/esm/startOfMinute/index.js","node_modules/date-fns/esm/isSameMinute/index.js","node_modules/date-fns/esm/isSameMonth/index.js","node_modules/date-fns/esm/isSameQuarter/index.js","node_modules/date-fns/esm/startOfSecond/index.js","node_modules/date-fns/esm/isSameSecond/index.js","node_modules/date-fns/esm/isSameYear/index.js","node_modules/date-fns/esm/isThisHour/index.js","node_modules/date-fns/esm/isThisISOWeek/index.js","node_modules/date-fns/esm/isThisMinute/index.js","node_modules/date-fns/esm/isThisMonth/index.js","node_modules/date-fns/esm/isThisQuarter/index.js","node_modules/date-fns/esm/isThisSecond/index.js","node_modules/date-fns/esm/isThisWeek/index.js","node_modules/date-fns/esm/isThisYear/index.js","node_modules/date-fns/esm/isThursday/index.js","node_modules/date-fns/esm/isToday/index.js","node_modules/date-fns/esm/isTomorrow/index.js","node_modules/date-fns/esm/isTuesday/index.js","node_modules/date-fns/esm/isWednesday/index.js","node_modules/date-fns/esm/isWithinInterval/index.js","node_modules/date-fns/esm/isYesterday/index.js","node_modules/date-fns/esm/lastDayOfDecade/index.js","node_modules/date-fns/esm/lastDayOfWeek/index.js","node_modules/date-fns/esm/lastDayOfISOWeek/index.js","node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js","node_modules/date-fns/esm/lastDayOfQuarter/index.js","node_modules/date-fns/esm/lastDayOfYear/index.js","node_modules/date-fns/esm/lightFormat/index.js","node_modules/date-fns/esm/max/index.js","node_modules/date-fns/esm/min/index.js","node_modules/date-fns/esm/parseISO/index.js","node_modules/date-fns/esm/parseJSON/index.js","node_modules/date-fns/esm/roundToNearestMinutes/index.js","node_modules/date-fns/esm/setMonth/index.js","node_modules/date-fns/esm/set/index.js","node_modules/date-fns/esm/setDate/index.js","node_modules/date-fns/esm/setDay/index.js","node_modules/date-fns/esm/setDayOfYear/index.js","node_modules/date-fns/esm/setHours/index.js","node_modules/date-fns/esm/setISODay/index.js","node_modules/date-fns/esm/setISOWeek/index.js","node_modules/date-fns/esm/setMilliseconds/index.js","node_modules/date-fns/esm/setMinutes/index.js","node_modules/date-fns/esm/setQuarter/index.js","node_modules/date-fns/esm/setSeconds/index.js","node_modules/date-fns/esm/setWeek/index.js","node_modules/date-fns/esm/setWeekYear/index.js","node_modules/date-fns/esm/setYear/index.js","node_modules/date-fns/esm/startOfDecade/index.js","node_modules/date-fns/esm/startOfToday/index.js","node_modules/date-fns/esm/startOfTomorrow/index.js","node_modules/date-fns/esm/startOfYesterday/index.js","node_modules/date-fns/esm/subBusinessDays/index.js","node_modules/date-fns/esm/subHours/index.js","node_modules/date-fns/esm/subMinutes/index.js","node_modules/date-fns/esm/subQuarters/index.js","node_modules/date-fns/esm/subSeconds/index.js","node_modules/date-fns/esm/subWeeks/index.js","node_modules/date-fns/esm/subYears/index.js","node_modules/date-fns/esm/constants/index.js","node_modules/date-fns/esm/index.js","js/utilities/booking/availableTimes.js","js/booking.js","node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","SHOW_BOOKED","SHOW_MODIFIED","SHOW_FAILED","SHOW_FULL","SHOW_CANCELLED","GET_AVAILABILITY","GET_BOOKING","POST_BOOKING","PUT_BOOKING","DELETE_BOOKING","addClassList","elem","className","document","querySelector","classList","add","removeClassList","console","log","remove","toggleClassList","toggle","hideModal","showModal","modal","getModalParams","type","payload","modalSelector","HTMLSelector","newHTML","_id","day","time","handleModal","innerHTML","autoFillForm","data","value","email","querySelectorAll","forEach","select","inputs","selects","errorBoxes","fields","from","showError","index","scrollIntoView","removeError","oninput","validity","valid","validateBooking","error","input","getAvailableParty","restaurant","id","setAvailableParty","availSizes","allSizes","party","innerText","size","option","createElement","includes","disabled","append","getFetchParams","params","method","url","resolved","res","rejected","sessionStorage","removeItem","err","response","status","fetch","then","catch","findBookingfromURL","location","search","substr","findBookingfromForm","event","preventDefault","h2","editForm","readOnly","bookForm","behavior","toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","requiredArgs","required","TypeError","toDate","argument","argStr","Object","toString","Date","getTime","warn","stack","addDays","dirtyDate","dirtyAmount","date","amount","setDate","getDate","isValid","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","options","result","replace","addSuffix","comparison","buildFormatLongFn","dirtyOptions","width","String","defaultWidth","format","formats","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","formatLong","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","context","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","_dirtyOptions","rem100","localize","era","quarter","month","dayPeriod","buildMatchPatternFn","dirtyString","string","matchResult","match","matchPattern","matchedString","parseResult","parsePattern","valueCallback","rest","slice","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","findIndex","pattern","test","findKey","object","predicate","key","hasOwnProperty","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","parseInt","locale","code","weekStartsOn","firstWeekContainsDate","addMilliseconds","timestamp","subMilliseconds","addLeadingZeros","targetLength","sign","output","abs","formatters","y","signedYear","getUTCFullYear","year","M","getUTCMonth","d","getUTCDate","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","pow","MILLISECONDS_IN_DAY","getUTCDayOfYear","setUTCMonth","setUTCHours","startOfYearTimestamp","difference","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","getUTCISOWeek","round","startOfUTCWeek","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","dayPeriodEnum","G","unit","lightFormatters","Y","signedWeekYear","weekYear","twoDigitYear","R","isoWeekYear","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","hours","b","B","K","k","X","_localize","originalDate","_originalDate","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","p","P","MILLISECONDS_IN_MINUTE","getDateMillisecondsPart","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","setSeconds","hasNegativeUTCOffset","millisecondsPartOfTimezoneOffset","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","defaultLocale","utcDate","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","getAvailableDates","current","dates","setAvailableDates","createDate","hour","mins","setParams","form","elements","message","handleSubmit","button","setItem","JSON","stringify","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","duration","years","months","weeks","days","seconds","dateWithMonths","dateWithDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","isWeekend","getDay","isSunday","isSaturday","addBusinessDays","startedOnWeekend","getHours","fullWeeks","restDays","setHours","MILLISECONDS_IN_HOUR","addHours","startOfWeek","startOfISOWeek","getISOWeekYear","startOfISOWeekYear","startOfDay","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","setISOWeekYear","dirtyISOWeekYear","addISOWeekYears","addMinutes","addQuarters","addSeconds","addWeeks","addYears","areIntervalsOverlapping","dirtyIntervalLeft","dirtyIntervalRight","undefined","intervalLeft","intervalRight","leftStartTime","start","leftEndTime","end","rightStartTime","rightEndTime","inclusive","closestIndexTo","dirtyDateToCompare","dirtyDatesArray","dateToCompare","timeToCompare","datesArray","minDistance","currentDate","distance","closestTo","compareAsc","dateLeft","dateRight","compareDesc","isSameDay","dateLeftStartOfDay","dateRightStartOfDay","differenceInBusinessDays","calendarDifference","differenceInCalendarISOWeekYears","differenceInCalendarISOWeeks","startOfISOWeekLeft","startOfISOWeekRight","differenceInCalendarMonths","yearDiff","monthDiff","getQuarter","differenceInCalendarQuarters","quarterDiff","differenceInCalendarWeeks","startOfWeekLeft","startOfWeekRight","differenceInCalendarYears","compareLocalAsc","getMinutes","getSeconds","getMilliseconds","differenceInDays","isLastDayNotFull","differenceInMilliseconds","differenceInHours","subISOWeekYears","differenceInISOWeekYears","isLastISOWeekYearNotFull","differenceInMinutes","differenceInMonths","isLastMonthNotFull","differenceInQuarters","differenceInSeconds","differenceInWeeks","differenceInYears","isLastYearNotFull","eachDayOfInterval","dirtyInterval","interval","startDate","endDate","endTime","step","eachHourOfInterval","startTime","setMinutes","eachMonthOfInterval","startOfQuarter","currentMonth","eachQuarterOfInterval","startDateQuarter","endDateQuarter","quarters","currentQuarter","eachWeekOfInterval","startDateWeek","endDateWeek","currentWeek","eachWeekendOfInterval","dateInterval","weekends","startOfMonth","endOfMonth","eachWeekendOfMonth","startOfYear","cleanDate","endOfYear","eachWeekendOfYear","eachYearOfInterval","endOfDay","endOfDecade","decade","endOfHour","endOfWeek","endOfISOWeek","endOfISOWeekYear","setMilliseconds","endOfMinute","endOfQuarter","endOfSecond","endOfToday","now","endOfTomorrow","endOfYesterday","assign","target","dirtyObject","property","cloneObject","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyBaseDate","localizeOptions","Boolean","offsetInSeconds","includeSeconds","nearestMonth","monthsSinceStartOfYear","MINUTES_IN_YEAR","formatDistanceStrict","roundingMethod","roundingMethodFn","formatDistanceToNow","formatDistanceToNowStrict","defaultFormat","formatDuration","zero","reduce","acc","addChunk","formatISO","representation","tzOffset","dateDelimiter","timeDelimiter","absoluteOffset","hourOffset","minuteOffset","minute","second","separator","formatISO9075","formatISODuration","_duration$years","_duration$months","_duration$days","_duration$hours","_duration$minutes","_duration$seconds","formatRFC3339","fractionDigits","fractionalSecond","formatRFC7231","dayName","monthName","baseDate","utcBaseDate","fromUnixTime","dirtyUnixTime","unixTime","getDayOfYear","getDaysInMonth","monthIndex","lastDayOfMonth","isLeapYear","getDaysInYear","getDecade","getISODay","getISOWeek","getISOWeeksInYear","thisYear","nextYear","valueOf","getOverlappingDaysInIntervals","isOverlapping","overlapStartDate","overlapEndDate","differenceInMs","getUnixTime","getWeekYear","startOfWeekYear","getWeek","getWeekOfMonth","currentDayOfMonth","startWeekDay","lastDayOfFirstWeek","weekNumber","remainingDaysAfterFirstWeek","getWeeksInMonth","getYear","subDays","subMonths","sub","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","intervalToDuration","_ref","remainingMonths","remainingDays","remainingHours","remainingMinutes","remainingSeconds","isAfter","isBefore","isDate","isEqual","dirtyLeftDate","dirtyRightDate","isExists","isFirstDayOfMonth","isFriday","isFuture","isLastDayOfMonth","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","setUTCISODay","setUTCISOWeek","dirtyISOWeek","setUTCWeek","dirtyWeek","MILLISECONDS_IN_SECOND","numericPatterns","hour23h","hour24h","hour11h","hour12h","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extended","extendedOptionalSeconds","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","rangeEndCentury","isPreviousCentury","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","priority","parse","set","flags","incompatibleTokens","isTwoDigitYear","validate","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","subPriority","wholeWeekDays","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","TIMEZONE_UNIT_PRIORITY","notWhitespaceRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","tokens","usedTokens","parser","isArray","incompatibleToken","_i","usedToken","fullToken","uniquePrioritySetters","setter","sort","filter","setterArray","convertedDate","isMatch","isMonday","isPast","startOfHour","isSameHour","dateLeftStartOfHour","dateRightStartOfHour","isSameWeek","dateLeftStartOfWeek","dateRightStartOfWeek","isSameISOWeek","isSameISOWeekYear","dateLeftStartOfYear","dateRightStartOfYear","startOfMinute","isSameMinute","dateLeftStartOfMinute","dateRightStartOfMinute","isSameMonth","isSameQuarter","dateLeftStartOfQuarter","dateRightStartOfQuarter","startOfSecond","isSameSecond","dateLeftStartOfSecond","dateRightStartOfSecond","isSameYear","isThisHour","isThisISOWeek","isThisMinute","isThisMonth","isThisQuarter","isThisSecond","isThisWeek","isThisYear","isThursday","isToday","isTomorrow","isTuesday","isWednesday","isWithinInterval","isYesterday","lastDayOfDecade","lastDayOfWeek","lastDayOfISOWeek","lastDayOfISOWeekYear","lastDayOfQuarter","lastDayOfYear","lightFormat","max","min","DEFAULT_ADDITIONAL_DIGITS","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","parseTime","parseTimezone","split","timeString","exec","regex","captures","century","isWeekDate","parseDateUnit","validateWeekDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","parseTimeUnit","validateTime","parseFloat","timezoneString","validateTimezone","fourthOfJanuaryDay","daysInMonths","_year","_hours","parseJSON","parts","UTC","roundToNearestMinutes","nearestTo","roundedMinutes","remainderMinutes","addedMinutes","dirtyMonth","dateWithDesiredMonth","dirtyDayOfMonth","setDay","delta","setDayOfYear","dirtyDayOfYear","dirtyHours","setISODay","setISOWeek","dirtyMilliseconds","dirtyMinutes","setQuarter","dirtyQuarter","oldQuarter","dirtySeconds","setWeek","setWeekYear","dirtyWeekYear","setYear","dirtyYear","startOfDecade","startOfToday","startOfTomorrow","startOfYesterday","subBusinessDays","subHours","subMinutes","subQuarters","subSeconds","subWeeks","subYears","maxTime","minTime","openingHours","Glensgaich","Mon","Tue","Wed","Thu","Fri","Sat","Sun","Tanygirisau","getAvailableTimes","times","opening","closing","setAvailableTimes","slots","slot","editBtn","onclick","onchange","findBtn","deleteBtn","onsubmit","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","overlay","createErrorOverlay","body","appendChild","getElementById","stackTrace","getParents","modules","parents","dep","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrpLA;AACA,IAAIA,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAA/B,EAEA;AACA;AACA;AACA;;AAEA,IAAIC,gBAAJ;AACA,IAAIC,kBAAJ;;AAEA,SAASC,gBAAT,GAA4B;AACxB,QAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,SAASC,mBAAT,GAAgC;AAC5B,QAAM,IAAID,KAAJ,CAAU,mCAAV,CAAN;AACH;;AACA,aAAY;AACT,MAAI;AACA,QAAI,OAAOE,UAAP,KAAsB,UAA1B,EAAsC;AAClCL,MAAAA,gBAAgB,GAAGK,UAAnB;AACH,KAFD,MAEO;AACHL,MAAAA,gBAAgB,GAAGE,gBAAnB;AACH;AACJ,GAND,CAME,OAAOI,CAAP,EAAU;AACRN,IAAAA,gBAAgB,GAAGE,gBAAnB;AACH;;AACD,MAAI;AACA,QAAI,OAAOK,YAAP,KAAwB,UAA5B,EAAwC;AACpCN,MAAAA,kBAAkB,GAAGM,YAArB;AACH,KAFD,MAEO;AACHN,MAAAA,kBAAkB,GAAGG,mBAArB;AACH;AACJ,GAND,CAME,OAAOE,CAAP,EAAU;AACRL,IAAAA,kBAAkB,GAAGG,mBAArB;AACH;AACJ,CAnBA,GAAD;;AAoBA,SAASI,UAAT,CAAoBC,GAApB,EAAyB;AACrB,MAAIT,gBAAgB,KAAKK,UAAzB,EAAqC;AACjC;AACA,WAAOA,UAAU,CAACI,GAAD,EAAM,CAAN,CAAjB;AACH,GAJoB,CAKrB;;;AACA,MAAI,CAACT,gBAAgB,KAAKE,gBAArB,IAAyC,CAACF,gBAA3C,KAAgEK,UAApE,EAAgF;AAC5EL,IAAAA,gBAAgB,GAAGK,UAAnB;AACA,WAAOA,UAAU,CAACI,GAAD,EAAM,CAAN,CAAjB;AACH;;AACD,MAAI;AACA;AACA,WAAOT,gBAAgB,CAACS,GAAD,EAAM,CAAN,CAAvB;AACH,GAHD,CAGE,OAAMH,CAAN,EAAQ;AACN,QAAI;AACA;AACA,aAAON,gBAAgB,CAACU,IAAjB,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC,CAAjC,CAAP;AACH,KAHD,CAGE,OAAMH,CAAN,EAAQ;AACN;AACA,aAAON,gBAAgB,CAACU,IAAjB,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC,CAAjC,CAAP;AACH;AACJ;AAGJ;;AACD,SAASE,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,MAAIX,kBAAkB,KAAKM,YAA3B,EAAyC;AACrC;AACA,WAAOA,YAAY,CAACK,MAAD,CAAnB;AACH,GAJ4B,CAK7B;;;AACA,MAAI,CAACX,kBAAkB,KAAKG,mBAAvB,IAA8C,CAACH,kBAAhD,KAAuEM,YAA3E,EAAyF;AACrFN,IAAAA,kBAAkB,GAAGM,YAArB;AACA,WAAOA,YAAY,CAACK,MAAD,CAAnB;AACH;;AACD,MAAI;AACA;AACA,WAAOX,kBAAkB,CAACW,MAAD,CAAzB;AACH,GAHD,CAGE,OAAON,CAAP,EAAS;AACP,QAAI;AACA;AACA,aAAOL,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,EAA8BE,MAA9B,CAAP;AACH,KAHD,CAGE,OAAON,CAAP,EAAS;AACP;AACA;AACA,aAAOL,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,EAA8BE,MAA9B,CAAP;AACH;AACJ;AAIJ;;AACD,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,QAAQ,GAAG,KAAf;AACA,IAAIC,YAAJ;AACA,IAAIC,UAAU,GAAG,CAAC,CAAlB;;AAEA,SAASC,eAAT,GAA2B;AACvB,MAAI,CAACH,QAAD,IAAa,CAACC,YAAlB,EAAgC;AAC5B;AACH;;AACDD,EAAAA,QAAQ,GAAG,KAAX;;AACA,MAAIC,YAAY,CAACG,MAAjB,EAAyB;AACrBL,IAAAA,KAAK,GAAGE,YAAY,CAACI,MAAb,CAAoBN,KAApB,CAAR;AACH,GAFD,MAEO;AACHG,IAAAA,UAAU,GAAG,CAAC,CAAd;AACH;;AACD,MAAIH,KAAK,CAACK,MAAV,EAAkB;AACdE,IAAAA,UAAU;AACb;AACJ;;AAED,SAASA,UAAT,GAAsB;AAClB,MAAIN,QAAJ,EAAc;AACV;AACH;;AACD,MAAIO,OAAO,GAAGb,UAAU,CAACS,eAAD,CAAxB;AACAH,EAAAA,QAAQ,GAAG,IAAX;AAEA,MAAIQ,GAAG,GAAGT,KAAK,CAACK,MAAhB;;AACA,SAAMI,GAAN,EAAW;AACPP,IAAAA,YAAY,GAAGF,KAAf;AACAA,IAAAA,KAAK,GAAG,EAAR;;AACA,WAAO,EAAEG,UAAF,GAAeM,GAAtB,EAA2B;AACvB,UAAIP,YAAJ,EAAkB;AACdA,QAAAA,YAAY,CAACC,UAAD,CAAZ,CAAyBO,GAAzB;AACH;AACJ;;AACDP,IAAAA,UAAU,GAAG,CAAC,CAAd;AACAM,IAAAA,GAAG,GAAGT,KAAK,CAACK,MAAZ;AACH;;AACDH,EAAAA,YAAY,GAAG,IAAf;AACAD,EAAAA,QAAQ,GAAG,KAAX;AACAH,EAAAA,eAAe,CAACU,OAAD,CAAf;AACH;;AAEDxB,OAAO,CAAC2B,QAAR,GAAmB,UAAUf,GAAV,EAAe;AAC9B,MAAIgB,IAAI,GAAG,IAAIC,KAAJ,CAAUC,SAAS,CAACT,MAAV,GAAmB,CAA7B,CAAX;;AACA,MAAIS,SAAS,CAACT,MAAV,GAAmB,CAAvB,EAA0B;AACtB,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACT,MAA9B,EAAsCU,CAAC,EAAvC,EAA2C;AACvCH,MAAAA,IAAI,CAACG,CAAC,GAAG,CAAL,CAAJ,GAAcD,SAAS,CAACC,CAAD,CAAvB;AACH;AACJ;;AACDf,EAAAA,KAAK,CAACgB,IAAN,CAAW,IAAIC,IAAJ,CAASrB,GAAT,EAAcgB,IAAd,CAAX;;AACA,MAAIZ,KAAK,CAACK,MAAN,KAAiB,CAAjB,IAAsB,CAACJ,QAA3B,EAAqC;AACjCN,IAAAA,UAAU,CAACY,UAAD,CAAV;AACH;AACJ,CAXD,EAaA;;;AACA,SAASU,IAAT,CAAcrB,GAAd,EAAmBsB,KAAnB,EAA0B;AACtB,OAAKtB,GAAL,GAAWA,GAAX;AACA,OAAKsB,KAAL,GAAaA,KAAb;AACH;;AACDD,IAAI,CAACE,SAAL,CAAeT,GAAf,GAAqB,YAAY;AAC7B,OAAKd,GAAL,CAASwB,KAAT,CAAe,IAAf,EAAqB,KAAKF,KAA1B;AACH,CAFD;;AAGAlC,OAAO,CAACqC,KAAR,GAAgB,SAAhB;AAEArC,OAAO,CAACsC,GAAR,GAAc,EAAd;AACAtC,OAAO,CAACuC,IAAR,GAAe,EAAf;AACAvC,OAAO,CAACwC,OAAR,GAAkB,EAAlB,EAAsB;;AACtBxC,OAAO,CAACyC,QAAR,GAAmB,EAAnB;;AAEA,SAASC,IAAT,GAAgB,CAAE;;AAElB1C,OAAO,CAAC2C,EAAR,GAAaD,IAAb;AACA1C,OAAO,CAAC4C,WAAR,GAAsBF,IAAtB;AACA1C,OAAO,CAAC6C,IAAR,GAAeH,IAAf;AACA1C,OAAO,CAAC8C,GAAR,GAAcJ,IAAd;AACA1C,OAAO,CAAC+C,cAAR,GAAyBL,IAAzB;AACA1C,OAAO,CAACgD,kBAAR,GAA6BN,IAA7B;AACA1C,OAAO,CAACiD,IAAR,GAAeP,IAAf;AACA1C,OAAO,CAACkD,eAAR,GAA0BR,IAA1B;AACA1C,OAAO,CAACmD,mBAAR,GAA8BT,IAA9B;;AAEA1C,OAAO,CAACoD,SAAR,GAAoB,UAAUC,IAAV,EAAgB;AAAE,SAAO,EAAP;AAAW,CAAjD;;AAEArD,OAAO,CAACsD,OAAR,GAAkB,UAAUD,IAAV,EAAgB;AAC9B,QAAM,IAAI/C,KAAJ,CAAU,kCAAV,CAAN;AACH,CAFD;;AAIAN,OAAO,CAACuD,GAAR,GAAc,YAAY;AAAE,SAAO,GAAP;AAAY,CAAxC;;AACAvD,OAAO,CAACwD,KAAR,GAAgB,UAAUC,GAAV,EAAe;AAC3B,QAAM,IAAInD,KAAJ,CAAU,gCAAV,CAAN;AACH,CAFD;;AAGAN,OAAO,CAAC0D,KAAR,GAAgB,YAAW;AAAE,SAAO,CAAP;AAAW,CAAxC;;;ACvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjznBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;A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AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;ACrMA;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAEO,IAAME,YAAY,GAAG;AAC3BC,EAAAA,UAAU,EAAE;AACXC,IAAAA,GAAG,EAAE,CAAC,OAAD,EAAU,OAAV,CADM;AAEXC,IAAAA,GAAG,E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","file":"booking.6c777bf2.js","sourceRoot":"..","sourcesContent":["'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","module.exports = require('./lib/axios');","export const SHOW_BOOKED = \"SHOW_BOOKED\";\r\nexport const SHOW_MODIFIED = \"SHOW_MODIFIED\";\r\nexport const SHOW_FAILED = \"SHOW_FAILED\";\r\nexport const SHOW_FULL = \"SHOW_FULL\";\r\nexport const SHOW_CANCELLED = \"SHOW_CANCELLED\";\r\n\r\nexport const GET_AVAILABILITY = \"GET_AVAILABILITY\";\r\n\r\nexport const GET_BOOKING = \"GET_BOOKING\";\r\nexport const POST_BOOKING = \"POST_BOOKING\";\r\nexport const PUT_BOOKING = \"PUT_BOOKING\";\r\nexport const DELETE_BOOKING = \"DELETE_BOOKING\";\r\n","export const addClassList = (elem, className) => {\r\n\ttypeof elem === \"string\"\r\n\t\t? document.querySelector(elem).classList.add(className)\r\n\t\t: elem.classList.add(className);\r\n};\r\n\r\nexport const removeClassList = (elem, className) => {\r\n\tconsole.log(\"hi\");\r\n\ttypeof elem === \"string\"\r\n\t\t? document.querySelector(elem).classList.remove(className)\r\n\t\t: elem.classList.remove(className);\r\n};\r\n\r\nexport const toggleClassList = (elem, className) => {\r\n\ttypeof elem === \"string\"\r\n\t\t? document.querySelector(elem).classList.toggle(className)\r\n\t\t: elem.classList.remove(className);\r\n};\r\n","import { addClassList, removeClassList } from \"./toggleClassList\";\r\n\r\nexport const hideModal = () => {\r\n\tif (document.querySelector(\".modal-active\")) {\r\n\t\tremoveClassList(\".modal-active\", \"modal-active\");\r\n\t}\r\n};\r\n\r\nexport const showModal = (modal) => {\r\n\thideModal();\r\n\taddClassList(\"nav\", \"nav-fixed\");\r\n\taddClassList(modal, \"modal-active\");\r\n};\r\n","import { SHOW_BOOKED, SHOW_FAILED, SHOW_FULL, SHOW_CANCELLED } from \"./types\";\r\nimport { showModal } from \"../dom/toggleModal\";\r\n\r\nconst getModalParams = (type, payload) => {\r\n\tswitch (type) {\r\n\t\tcase SHOW_BOOKED:\r\n\t\t\treturn {\r\n\t\t\t\tmodalSelector: \".bookSuccess\",\r\n\t\t\t\tHTMLSelector: \"#_id\",\r\n\t\t\t\tnewHTML: `<a href=\"booking?${payload._id}\">${payload._id}</a>`,\r\n\t\t\t};\r\n\t\tcase SHOW_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\tmodalSelector: \".bookFail\",\r\n\t\t\t};\r\n\t\tcase SHOW_FULL:\r\n\t\t\treturn {\r\n\t\t\t\tmodalSelector: \".bookFull\",\r\n\t\t\t\tHTMLSelector: \".bookingDate\",\r\n\t\t\t\tnewHTML:\r\n\t\t\t\t\t\"<div>\" +\r\n\t\t\t\t\t`<p>Date: <span>${payload.day}</span></p>` +\r\n\t\t\t\t\t`<p>Time: <span>${payload.time}</span></p>` +\r\n\t\t\t\t\t\"</div>\",\r\n\t\t\t};\r\n\t\tcase SHOW_CANCELLED:\r\n\t\t\treturn {\r\n\t\t\t\tmodalSelector: \".bookDeleted\",\r\n\t\t\t};\r\n\t}\r\n};\r\n\r\nexport const handleModal = (type, payload) => {\r\n\tconst { modalSelector, HTMLSelector, newHTML } = getModalParams(\r\n\t\ttype,\r\n\t\tpayload\r\n\t);\r\n\tif (HTMLSelector) document.querySelector(HTMLSelector).innerHTML = newHTML;\r\n\tshowModal(modalSelector);\r\n};\r\n","import { hideModal } from \"../dom/toggleModal\";\r\n\r\nexport const autoFillForm = (data) => {\r\n\tdocument.querySelector(\"#name\").value = data.name;\r\n\tdocument.querySelector(\"#email\").value = data.email;\r\n\tdocument\r\n\t\t.querySelectorAll(\"select\")\r\n\t\t.forEach((select) => (select.value = data[select.name]));\r\n\tif (document.querySelector(\".modal-active\")) hideModal();\r\n};\r\n","import { addClassList, removeClassList } from \"../dom/toggleClassList\";\r\n\r\nconst inputs = document.querySelectorAll(\"input\");\r\nconst selects = document.querySelectorAll(\"select\");\r\nconst errorBoxes = document.querySelectorAll(\".error\");\r\n\r\nconst fields = Array.from(inputs).concat(Array.from(selects));\r\n\r\nexport const showError = (index) => {\r\n\taddClassList(errorBoxes[index], \"errorActive\");\r\n\taddClassList(fields[index], \"inputInvalid\");\r\n\tfields[index].scrollIntoView();\r\n};\r\n\r\nexport const removeError = (index) => {\r\n\tfields[index].oninput = () => {\r\n\t\tif (fields[index].validity.valid) {\r\n\t\t\tremoveClassList(fields[index], \"inputInvalid\");\r\n\t\t\tremoveClassList(errorBoxes[index], \"errorActive\");\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const validateBooking = () => {\r\n\tlet error = false;\r\n\tfields.forEach((input, index) => {\r\n\t\tif (!input.validity.valid) {\r\n\t\t\terror = true;\r\n\t\t\tshowError(index);\r\n\t\t\tremoveError(index);\r\n\t\t}\r\n\t});\r\n\treturn error;\r\n};\r\n","import { fetch } from \"./fetch\";\r\nimport { GET_AVAILABILITY } from \"./types\";\r\n\r\nexport const getAvailableParty = (restaurant, day, time, id = null) => {\r\n\treturn fetch(GET_AVAILABILITY, { restaurant, day, time, id });\r\n};\r\n\r\nexport const setAvailableParty = (availSizes = [2, 3, 4, 5, 6, 7, 8]) => {\r\n\tconst allSizes = [2, 3, 4, 5, 6, 7, 8];\r\n\tparty.innerText = \"\";\r\n\tfor (const size of allSizes) {\r\n\t\tconst option = document.createElement(\"option\");\r\n\t\toption.value = size;\r\n\t\toption.innerHTML = size;\r\n\t\tif (!availSizes.includes(size)) {\r\n\t\t\toption.disabled = true;\r\n\t\t\toption.innerHTML += \" - Booking full\";\r\n\t\t}\r\n\t\tparty.append(option);\r\n\t}\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n\tPUT_BOOKING,\r\n\tDELETE_BOOKING,\r\n\tPOST_BOOKING,\r\n\tGET_BOOKING,\r\n\tSHOW_CANCELLED,\r\n\tSHOW_FAILED,\r\n\tSHOW_BOOKED,\r\n\tSHOW_FULL,\r\n\tGET_AVAILABILITY,\r\n} from \"./types\";\r\nimport { handleModal } from \"./handleModal\";\r\nimport { autoFillForm } from \"./autofillForm\";\r\nimport { showError } from \"./validateBooking\";\r\nimport { setAvailableParty } from \"./availableParty\";\r\n\r\nconst getFetchParams = (type, params) => {\r\n\tswitch (type) {\r\n\t\tcase GET_AVAILABILITY:\r\n\t\t\treturn {\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\turl: `./api/book/avail\r\n\t\t\t\t?restaurant=${params.restaurant}\r\n\t\t\t\t&day=${params.day}\r\n\t\t\t\t&time=${params.time}\r\n\t\t\t\t&id=${params.id}`,\r\n\t\t\t\tresolved: function (res) {\r\n\t\t\t\t\tsetAvailableParty(res.data.party);\r\n\t\t\t\t},\r\n\t\t\t\trejected: function () {\r\n\t\t\t\t\tsetAvailableParty([2, 3, 4, 5, 6, 7, 8]);\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase POST_BOOKING:\r\n\t\t\treturn {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\turl: \"./api/book\",\r\n\t\t\t\tresolved: function (res) {\r\n\t\t\t\t\tsessionStorage.removeItem(\"booking\");\r\n\t\t\t\t\thandleModal(SHOW_BOOKED, res.data);\r\n\t\t\t\t},\r\n\t\t\t\trejected: function (err) {\r\n\t\t\t\t\terr.response.status === 409\r\n\t\t\t\t\t\t? handleModal(SHOW_FULL, err.response.data)\r\n\t\t\t\t\t\t: handleModal(SHOW_FAILED);\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase GET_BOOKING:\r\n\t\t\treturn {\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\turl: `/api/booking/${params.id}`,\r\n\t\t\t\tresolved: function (res) {\r\n\t\t\t\t\tres.data ? autoFillForm(res.data) : showError(0);\r\n\t\t\t\t},\r\n\t\t\t\trejected: function () {\r\n\t\t\t\t\tshowError(0);\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase PUT_BOOKING:\r\n\t\t\treturn {\r\n\t\t\t\tmethod: \"PUT\",\r\n\t\t\t\turl: `./api/booking/${document.querySelector(\"#id\").value}`,\r\n\t\t\t\tresolved: function (res) {\r\n\t\t\t\t\thandleModal(SHOW_BOOKED, res.data);\r\n\t\t\t\t},\r\n\t\t\t\trejected: function (err) {\r\n\t\t\t\t\terr.response.status === 409\r\n\t\t\t\t\t\t? handleModal(SHOW_FULL, err.response.data)\r\n\t\t\t\t\t\t: handleModal(SHOW_FAILED);\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\tcase DELETE_BOOKING:\r\n\t\t\treturn {\r\n\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t\turl: `./api/booking/${params.id}`,\r\n\t\t\t\tresolved: function () {\r\n\t\t\t\t\thandleModal(SHOW_CANCELLED);\r\n\t\t\t\t},\r\n\t\t\t\trejected: function () {\r\n\t\t\t\t\thandleModal(SHOW_FAILED);\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t}\r\n};\r\n\r\nexport const fetch = (type, params) => {\r\n\tconst { method, url, resolved, rejected } = getFetchParams(type, params);\r\n\taxios({ method, url, data: params })\r\n\t\t.then((res) => resolved(res))\r\n\t\t.catch((err) => rejected(err));\r\n};\r\n","// import axios from 'axios';\r\nimport { fetch } from './fetch';\r\nimport { GET_BOOKING } from './types';\r\n\r\n// auto find booking from url\r\nexport const findBookingfromURL = () => {\r\n  const id = location.search.substr(1);\r\n  if (id !== \"\") {\r\n    document.querySelector('#id').value = id;\r\n  }\r\n  fetch(GET_BOOKING, { id });\r\n}\r\n\r\n// find booking from form submit\r\nexport const findBookingfromForm = (event) => { \r\n  event.preventDefault();\r\n  const id = document.querySelector('#id').value;\r\n  fetch(GET_BOOKING, { id });\r\n};\r\n\r\n\r\n","const h2 = document.querySelector('#bookingForm h2');\r\nconst inputs = document.querySelectorAll('input');\r\n\r\nexport const editForm = (e) => {\r\n  e.preventDefault();\r\n  inputs.forEach(input => {if (input.name !== \"restaurant\") input.readOnly = false});\r\n  bookForm.classList.remove('formDisabled');\r\n  bookForm.classList.add('formEditable');\r\n  h2.innerHTML = \"Edit your booking\";\r\n  h2.scrollIntoView({behavior: \"smooth\"});\r\n};","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import addDays from \"date-fns/addDays\";\r\nimport format from \"date-fns/format\";\r\n\r\nexport const getAvailableDates = (today) => {\r\n\tlet current = today;\r\n\tconst dates = [];\r\n\tfor (let i = 0; i <= 13; i++) {\r\n\t\tcurrent = addDays(current, 1);\r\n\t\tdates.push(current);\r\n\t}\r\n\treturn dates;\r\n};\r\n\r\nexport const setAvailableDates = (today) => {\r\n\tconst dates = getAvailableDates(today);\r\n\tday.innerHTML = \"\";\r\n\tfor (const date of dates) {\r\n\t\tconst option = document.createElement(\"option\");\r\n\t\toption.value = format(date, \"dd/MM/yyyy\");\r\n\t\toption.innerHTML = format(date, \"eee do MMM\");\r\n\t\tday.append(option);\r\n\t}\r\n\tday.value = format(dates[0], \"dd/MM/yyyy\");\r\n};\r\n\r\n\r\n","// date in format dd/mm/yy\r\n// time in format hh:mm\r\nexport const createDate = (date, time = \"17:00\") => {\r\n\tconst day = parseInt(date.substr(0, 2));\r\n\tconst month = parseInt(date.substr(3, 5)) - 1;\r\n\tconst year = parseInt(date.substr(6));\r\n\tconst hour = parseInt(time.substr(0, 2));\r\n\tconst mins = parseInt(time.substr(3, 5));\r\n\treturn new Date(year, month, day, hour, mins);\r\n};\r\n","import { fetch } from \"./fetch\";\r\nimport { validateBooking } from \"./validateBooking\";\r\nimport { createDate } from \"./createDate\";\r\n\r\nexport const setParams = () => {\r\n\tconst form = document.querySelector(\"#bookForm\");\r\n\tconst name = form.elements[\"name\"].value;\r\n\tconst email = form.elements[\"email\"].value;\r\n\tconst restaurant = form.elements[\"restaurant\"].value;\r\n\tconst day = form.elements[\"day\"].value;\r\n\tconst time = form.elements[\"time\"].value;\r\n\tconst party = form.elements[\"party\"].value;\r\n\tconst message = form.elements[\"message\"].value;\r\n\tconst date = createDate(day, time);\r\n\treturn { name, email, restaurant, day, date, time, party, message };\r\n};\r\n\r\nexport const handleSubmit = (e, type, button) => {\r\n\te.preventDefault();\r\n\tconst err = validateBooking();\r\n\tif (!err) {\r\n\t\tconst params = setParams();\r\n\t\tsessionStorage.setItem(\"booking\", JSON.stringify(params));\r\n\t\tdocument.querySelector(button).disabled = true;\r\n\t\tfetch(type, params);\r\n\t}\r\n};\r\n","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import addDays from '../addDays/index.js';\nimport addMonths from '../addMonths/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added       |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * var result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\n\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWeekend\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * var result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\n\nexport default function isWeekend(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day === 0 || day === 6;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSunday\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * var result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\n\nexport default function isSunday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 0;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSaturday\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * var result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\n\nexport default function isSaturday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 6;\n}","import isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport isSunday from '../isSunday/index.js';\nimport isSaturday from '../isSaturday/index.js';\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * var result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function addBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var startedOnWeekend = isWeekend(date);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  var fullWeeks = toInteger(amount / 5);\n  date.setDate(date.getDate() + fullWeeks * 7); // Get remaining days not part of a full week\n\n  var restDays = Math.abs(amount % 5); // Loops over remaining days\n\n  while (restDays > 0) {\n    date.setDate(date.getDate() + sign);\n    if (!isWeekend(date)) restDays -= 1;\n  } // If the date is a weekend day and we reduce a dividable of\n  // 5 from it, we land on a weekend date.\n  // To counter this, we add days accordingly to land on the next business day\n\n\n  if (startedOnWeekend && isWeekend(date) && amount !== 0) {\n    // If we're reducing days, we want to add days until we land on a weekday\n    // If we're adding days we want to reduce days until we land on a weekday\n    if (isSaturday(date)) date.setDate(date.getDate() + (sign < 0 ? 2 : -1));\n    if (isSunday(date)) date.setDate(date.getDate() + (sign < 0 ? 1 : -2));\n  } // Restore hours to avoid DST lag\n\n\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\n\nexport default function addHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return startOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import toDate from '../toDate/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getISOYear` to `getISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\n\nexport default function getISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `setISOYear` to `setISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeekYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * var result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\n\nexport default function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeekYear = toInteger(dirtyISOWeekYear);\n  var diff = differenceInCalendarDays(date, startOfISOWeekYear(date));\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  date = startOfISOWeekYear(fourthOfJanuary);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport getISOWeekYear from '../getISOWeekYear/index.js';\nimport setISOWeekYear from '../setISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `addISOYears` to `addISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * var result = addISOWeekYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\n\nexport default function addISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return setISOWeekYear(dirtyDate, getISOWeekYear(dirtyDate) + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * var result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\n\nexport default function addQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var months = amount * 3;\n  return addMonths(dirtyDate, months);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\n\nexport default function addSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * 1000);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * var result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\n\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name areIntervalsOverlapping\n * @category Interval Helpers\n * @summary Is the given time interval overlapping with another time interval?\n *\n * @description\n * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   areRangesOverlapping(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   areIntervalsOverlapping(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/types/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.inclusive=false] - whether the comparison is inclusive or not\n * @returns {Boolean} whether the time intervals are overlapping\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> false\n *\n * @example\n * // For adjacent time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }\n * )\n * //=> false\n *\n * @example\n * // Using the inclusive option:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }\n * )\n * //=> false\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },\n *   { inclusive: true }\n * )\n * //=> true\n */\n\nexport default function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  if (options.inclusive) {\n    return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;\n  }\n\n  return leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name closestIndexTo\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestIndexTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Number} an index of the date closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * var dateToCompare = new Date(2015, 8, 6)\n * var datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * var result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\n\nexport default function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return NaN;\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate, index) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = NaN;\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = index;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name closestTo\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Date} the date from the array closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * var dateToCompare = new Date(2015, 8, 6)\n * var result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\n\nexport default function closestTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return new Date(NaN);\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = new Date(NaN);\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = currentDate;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareDesc\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * var result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\n\nexport default function compareDesc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff > 0) {\n    return -1;\n  } else if (diff < 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import isValid from '../isValid/index.js';\nimport isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport addDays from '../addDays/index.js';\nimport isSameDay from '../isSameDay/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInBusinessDays\n * @category Day Helpers\n * @summary Get the number of business days between the given dates.\n *\n * @description\n * Get the number of business day periods between the given dates.\n * Business days being days that arent in the weekend.\n * Like `differenceInCalendarDays`, the function removes the times from\n * the dates before calculating the difference.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of business days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many business days are between\n * // 10 January 2014 and 20 July 2014?\n * var result = differenceInBusinessDays(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 0, 10)\n * )\n * //=> 136\n */\n\nexport default function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  if (!isValid(dateLeft) || !isValid(dateRight)) return new Date(NaN);\n  var calendarDifference = differenceInCalendarDays(dateLeft, dateRight);\n  var sign = calendarDifference < 0 ? -1 : 1;\n  var weeks = toInteger(calendarDifference / 7);\n  var result = weeks * 5;\n  dateRight = addDays(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n\n  while (!isSameDay(dateLeft, dateRight)) {\n    // sign is used to account for both negative and positive differences\n    result += isWeekend(dateRight) ? 0 : sign;\n    dateRight = addDays(dateRight, sign);\n  }\n\n  return result === 0 ? 0 : result;\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * var result = differenceInCalendarISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return getISOWeekYear(dirtyDateLeft) - getISOWeekYear(dirtyDateRight);\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * var result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft);\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight);\n  var timestampLeft = startOfISOWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\n  var timestampRight = startOfISOWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getQuarter\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which quarter is 2 July 2014?\n * var result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\n\nexport default function getQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = Math.floor(date.getMonth() / 3) + 1;\n  return quarter;\n}","import getQuarter from '../getQuarter/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarQuarters\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight);\n  return yearDiff * 4 + quarterDiff;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarWeeks\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   { weekStartsOn: 1 }\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions);\n  var timestampLeft = startOfWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekLeft);\n  var timestampRight = startOfWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() - dateRight.getFullYear();\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * var result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareLocalAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addISOWeekYears from '../addISOWeekYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `subISOYears` to `subISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * var result = subISOWeekYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\n\nexport default function subISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addISOWeekYears(dirtyDate, -amount);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarISOWeekYears from '../differenceInCalendarISOWeekYears/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport subISOWeekYears from '../subISOWeekYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * var result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\n\nexport default function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarISOWeekYears(dateLeft, dateRight));\n  dateLeft = subISOWeekYears(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastISOWeekYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMonths from '../differenceInMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\n\nexport default function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInDays from '../differenceInDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between two dates. Fractional weeks are\n * truncated towards zero.\n *\n * One \"full week\" is the distance between a local time in one day to the same\n * local time 7 days earlier or later. A full week can sometimes be less than\n * or more than 7*24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 7*24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n *\n * // How many full weeks are between\n * // 1 March 2020 0:00 and 6 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 8 weeks (54 days),\n * // even if DST starts and the period has\n * // only 54*24-1 hours.\n * var result = differenceInWeeks(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 6)\n * )\n * //=> 8\n */\n\nexport default function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarYears from '../differenceInCalendarYears/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\n\nexport default function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n\n  dateLeft.setFullYear('1584');\n  dateRight.setFullYear('1584'); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import addHours from '../addHours/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachHourOfInterval\n * @category Interval Helpers\n * @summary Return the array of hours within the specified time interval.\n *\n * @description\n * Return the array of hours within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of hours from the hour of the interval start to the hour of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each hour between 6 October 2014, 12:00 and 10 October 2014, 15:00\n * var result = eachHourOfInterval({\n *   start: new Date(2014, 9, 6, 12),\n *   end: new Date(2014, 9, 6, 15)\n * })\n * //=> [\n * //   Mon Oct 06 2014 12:00:00,\n * //   Mon Oct 06 2014 13:00:00,\n * //   Mon Oct 06 2014 14:00:00,\n * //   Mon Oct 06 2014 15:00:00\n * // ]\n */\n\nexport default function eachHourOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var startTime = startDate.getTime();\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setMinutes(0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate = addHours(currentDate, step);\n  }\n\n  return dates;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachMonthOfInterval\n * @category Interval Helpers\n * @summary Return the array of months within the specified time interval.\n *\n * @description\n * Return the array of months within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of months from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each month between 6 February 2014 and 10 August 2014:\n * var result = eachMonthOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Sat Feb 01 2014 00:00:00,\n * //   Sat Mar 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Thu May 01 2014 00:00:00,\n * //   Sun Jun 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * //   Fri Aug 01 2014 00:00:00\n * // ]\n */\n\nexport default function eachMonthOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setDate(1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setMonth(currentDate.getMonth() + 1);\n  }\n\n  return dates;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfQuarter\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\n\nexport default function startOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3;\n  date.setMonth(month, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import addQuarters from '../addQuarters/index.js';\nimport startOfQuarter from '../startOfQuarter/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachQuarterOfInterval\n * @category Interval Helpers\n * @summary Return the array of quarters within the specified time interval.\n *\n * @description\n * Return the array of quarters within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of quarters from the quarter of the interval start to the quarter of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each quarter within interval 6 February 2014 - 10 August 2014:\n * var result = eachQuarterOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * // ]\n */\n\nexport default function eachQuarterOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateQuarter = startOfQuarter(startDate);\n  var endDateQuarter = startOfQuarter(endDate);\n  endTime = endDateQuarter.getTime();\n  var quarters = [];\n  var currentQuarter = startDateQuarter;\n\n  while (currentQuarter.getTime() <= endTime) {\n    quarters.push(toDate(currentQuarter));\n    currentQuarter = addQuarters(currentQuarter, 1);\n  }\n\n  return quarters;\n}","import addWeeks from '../addWeeks/index.js';\nimport startOfWeek from '../startOfWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * var result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\n\nexport default function eachWeekOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateWeek = startOfWeek(startDate, options);\n  var endDateWeek = startOfWeek(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n  endTime = endDateWeek.getTime();\n  var weeks = [];\n  var currentWeek = startDateWeek;\n\n  while (currentWeek.getTime() <= endTime) {\n    currentWeek.setHours(0);\n    weeks.push(toDate(currentWeek));\n    currentWeek = addWeeks(currentWeek, 1);\n    currentWeek.setHours(15);\n  }\n\n  return weeks;\n}","import eachDayOfInterval from '../eachDayOfInterval/index.js';\nimport isSunday from '../isSunday/index.js';\nimport isWeekend from '../isWeekend/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @param {Interval} interval - the given interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * var result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfInterval(interval) {\n  requiredArgs(1, arguments);\n  var dateInterval = eachDayOfInterval(interval);\n  var weekends = [];\n  var index = 0;\n\n  while (index < dateInterval.length) {\n    var date = dateInterval[index++];\n\n    if (isWeekend(date)) {\n      weekends.push(date);\n      if (isSunday(date)) index = index + 5;\n    }\n  }\n\n  return weekends;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import eachWeekendOfInterval from '../eachWeekendOfInterval/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport endOfMonth from '../endOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfMonth\n * @category Month Helpers\n * @summary List all the Saturdays and Sundays in the given month.\n *\n * @description\n * Get all the Saturdays and Sundays in the given month.\n *\n * @param {Date|Number} date - the given month\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the given month\n * var result = eachWeekendOfMonth(new Date(2022, 1, 1))\n * //=> [\n * //   Sat Feb 05 2022 00:00:00,\n * //   Sun Feb 06 2022 00:00:00,\n * //   Sat Feb 12 2022 00:00:00,\n * //   Sun Feb 13 2022 00:00:00,\n * //   Sat Feb 19 2022 00:00:00,\n * //   Sun Feb 20 2022 00:00:00,\n * //   Sat Feb 26 2022 00:00:00,\n * //   Sun Feb 27 2022 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfMonth(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfMonth(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\n\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import eachWeekendOfInterval from '../eachWeekendOfInterval/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport endOfYear from '../endOfYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @param {Date|Number} date - the given year\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * var result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n * //   Sat Jan 03 2020 00:00:00,\n * //   Sun Jan 04 2020 00:00:00,\n * //   ...\n * //   Sun Dec 27 2020 00:00:00\n * // ]\n * ]\n */\n\nexport default function eachWeekendOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfYear(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfYear(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachYearOfInterval\n * @category Interval Helpers\n * @summary Return the array of yearly timestamps within the specified time interval.\n *\n * @description\n * Return the array of yearly timestamps within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each year between 6 February 2014 and 10 August 2017:\n * var result = eachYearOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2017, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Thu Jan 01 2015 00:00:00,\n * //   Fri Jan 01 2016 00:00:00,\n * //   Sun Jan 01 2017 00:00:00\n * // ]\n */\n\nexport default function eachYearOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setMonth(0, 1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setFullYear(currentDate.getFullYear() + 1);\n  }\n\n  return dates;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDecade\n * @category Decade Helpers\n * @summary Return the end of a decade for the given date.\n *\n * @description\n * Return the end of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a decade\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The end of a decade for 12 May 1984 00:00:00:\n * var result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))\n * //=> Dec 31 1989 23:59:59.999\n */\n\nexport default function endOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 11, 31);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfHour\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * var result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\n\nexport default function endOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import endOfWeek from '../endOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return endOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * var result = endOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\n\nexport default function endOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  date.setMilliseconds(date.getMilliseconds() - 1);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMinute\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\n\nexport default function endOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfQuarter\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfSecond\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\n\nexport default function endOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(999);\n  return date;\n}","import endOfDay from '../endOfDay/index.js';\n/**\n * @name endOfToday\n * @category Day Helpers\n * @summary Return the end of today.\n * @pure false\n *\n * @description\n * Return the end of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\n\nexport default function endOfToday() {\n  return endOfDay(Date.now());\n}","/**\n * @name endOfTomorrow\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n * @pure false\n *\n * @description\n * Return the end of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nexport default function endOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","/**\n * @name endOfYesterday\n * @category Day Helpers\n * @summary Return the end of yesterday.\n * @pure false\n *\n * @description\n * Return the end of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nexport default function endOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport toDate from '../toDate/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport toDate from '../toDate/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_YEAR = 525600;\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(2015, 0, 2),\n *     new Date(2014, 6, 2)\n *   ) //=> '6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(2014, 6, 2),\n *     new Date(2015, 0, 2)\n *   ) //=> '6 months'\n *   ```\n *\n * - `partialMethod` option is renamed to `roundingMethod`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { partialMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { roundingMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *   ```\n *\n * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n *\n * - `unit` option now accepts one of the strings:\n *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { unit: 'm' }\n *   )\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { unit: 'minute' }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * var result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * var result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * var result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);\n  var roundingMethodFn;\n\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = roundingMethodFn((seconds - offsetInSeconds) / 60);\n  var unit;\n\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (minutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (minutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(options.unit);\n  } // 0 up to 60 seconds\n\n\n  if (unit === 'second') {\n    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(minutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import distanceInWords from '../formatDistance/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import distanceInStrictWords from '../formatDistanceStrict/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInStrictWords(dirtyDate, Date.now(), dirtyOptions);\n}","import defaultLocale from '../locale/en-US/index.js';\nvar defaultFormat = ['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'];\n/**\n * @name formatDuration\n * @category Common Helpers\n * @summary Formats a duration in human-readable format\n *\n * @description\n * Return human-readable duration string i.e. \"9 months 2 days\"\n *\n * @param {Duration} duration - the duration to format\n * @param {Object} [options] - an object with options.\n\n * @param {string[]} [options.format=['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']] - the array of units to format\n * @param {boolean} [options.zero=false] - should be zeros be included in the output?\n * @param {string} [options.delimiter=' '] - delimiter string\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {string} the formatted date string\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Format full duration\n * formatDuration({\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds\n *\n * @example\n * // Format partial duration\n * formatDuration({ months: 9, days: 2 })\n * //=> '9 months 2 days'\n *\n * @example\n * // Customize the format\n * formatDuration(\n *   {\n *     years: 2,\n *     months: 9,\n *     weeks: 1,\n *     days: 7,\n *     hours: 5,\n *     minutes: 9,\n *     seconds: 30\n *   },\n *   { format: ['months', 'weeks'] }\n * ) === '9 months 1 week'\n *\n * @example\n * // Customize the zeros presence\n * formatDuration({ years: 0, months: 9 })\n * //=> '9 months'\n * formatDuration({ years: 0, months: 9 }, null, { zero: true })\n * //=> '0 years 9 months'\n *\n * @example\n * // Customize the delimiter\n * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })\n * //=> '2 years, 9 months, 3 weeks'\n */\n\nexport default function formatDuration(duration) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var format = options.format || defaultFormat;\n  var locale = options.locale || defaultLocale;\n  var zero = options.zero || false;\n  var delimiter = options.delimiter || ' ';\n  var result = format.reduce(function (acc, unit) {\n    var token = \"x\".concat(unit.replace(/(^.)/, function (m) {\n      return m.toUpperCase();\n    }));\n    var addChunk = typeof duration[unit] === 'number' && (zero || duration[unit]);\n    return addChunk ? acc.concat(locale.formatDistance(token, duration[unit])) : acc;\n  }, []).join(delimiter);\n  return result;\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with time zone, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\n\nexport default function formatISO(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'\n\n    var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n\n    var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n\n  return result;\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\n/**\n * @name formatISO9075\n * @category Common Helpers\n * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).\n *\n * @description\n * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18 19:00:52'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075, short format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918 190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, date only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, time only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52'\n */\n\nexport default function formatISO9075(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space\n\n    var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);\n  }\n\n  return result;\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatISODuration\n * @category Common Helpers\n * @summary Format a duration object according as ISO 8601 duration string\n *\n * @description\n * Format a duration object according to the ISO 8601 duration standard (https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm)\n *\n * @param {Duration} duration - the duration to format\n *\n * @returns {String} The ISO 8601 duration string\n * @throws {TypeError} Requires 1 argument\n * @throws {Error} Argument must be an object\n *\n * @example\n * // Format the given duration as ISO 8601 string\n * formatISODuration({\n *   years: 39,\n *   months: 2,\n *   days: 20,\n *   hours: 7,\n *   minutes: 5,\n *   seconds: 0\n * })\n * //=> 'P39Y2M20DT0H0M0S'\n */\n\nexport default function formatISODuration(duration) {\n  requiredArgs(1, arguments);\n  if (typeof duration !== 'object') throw new Error('Duration must be an object');\n  var _duration$years = duration.years,\n      years = _duration$years === void 0 ? 0 : _duration$years,\n      _duration$months = duration.months,\n      months = _duration$months === void 0 ? 0 : _duration$months,\n      _duration$days = duration.days,\n      days = _duration$days === void 0 ? 0 : _duration$days,\n      _duration$hours = duration.hours,\n      hours = _duration$hours === void 0 ? 0 : _duration$hours,\n      _duration$minutes = duration.minutes,\n      minutes = _duration$minutes === void 0 ? 0 : _duration$minutes,\n      _duration$seconds = duration.seconds,\n      seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;\n  return \"P\".concat(years, \"Y\").concat(months, \"M\").concat(days, \"DT\").concat(hours, \"H\").concat(minutes, \"M\").concat(seconds, \"S\");\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name formatRFC3339\n * @category Common Helpers\n * @summary Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).\n *\n * @description\n * Return the formatted date string in ISO 3339 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2|3} [options.fractionDigits=0] - number of digits after the decimal point after seconds\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.fractionDigits` must be between 0 and 3\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format, 2 digits of second fraction:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })\n * //=> '2019-09-18T19:00:52.23Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format, 3 digits of second fraction\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })\n * //=> '2019-09-18T19:00:52.234Z'\n */\n\nexport default function formatRFC3339(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var fractionDigits = options.fractionDigits == null ? 0 : toInteger(options.fractionDigits); // Test if fractionDigits is between 0 and 3 _and_ is not NaN\n\n  if (!(fractionDigits >= 0 && fractionDigits <= 3)) {\n    throw new RangeError('fractionDigits must be between 0 and 3 inclusively');\n  }\n\n  var day = addLeadingZeros(originalDate.getDate(), 2);\n  var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n  var year = originalDate.getFullYear();\n  var hour = addLeadingZeros(originalDate.getHours(), 2);\n  var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getSeconds(), 2);\n  var fractionalSecond = '';\n\n  if (fractionDigits > 0) {\n    var milliseconds = originalDate.getMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));\n    fractionalSecond = '.' + addLeadingZeros(fractionalSeconds, fractionDigits);\n  }\n\n  var offset = '';\n  var tzOffset = originalDate.getTimezoneOffset();\n\n  if (tzOffset !== 0) {\n    var absoluteOffset = Math.abs(tzOffset);\n    var hourOffset = addLeadingZeros(toInteger(absoluteOffset / 60), 2);\n    var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n    var sign = tzOffset < 0 ? '+' : '-';\n    offset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n  } else {\n    offset = 'Z';\n  }\n\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day, \"T\").concat(hour, \":\").concat(minute, \":\").concat(second).concat(fractionalSecond).concat(offset);\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\nvar days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n/**\n * @name formatRFC7231\n * @category Common Helpers\n * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).\n *\n * @description\n * Return the formatted date string in RFC 7231 format.\n * The result will always be in UTC timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 18 September 2019 in RFC 7231 format:\n * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))\n * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'\n */\n\nexport default function formatRFC7231(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var dayName = days[originalDate.getUTCDay()];\n  var dayOfMonth = addLeadingZeros(originalDate.getUTCDate(), 2);\n  var monthName = months[originalDate.getUTCMonth()];\n  var year = originalDate.getUTCFullYear();\n  var hour = addLeadingZeros(originalDate.getUTCHours(), 2);\n  var minute = addLeadingZeros(originalDate.getUTCMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getUTCSeconds(), 2); // Result variables.\n\n  return \"\".concat(dayName, \", \").concat(dayOfMonth, \" \").concat(monthName, \" \").concat(year, \" \").concat(hour, \":\").concat(minute, \":\").concat(second, \" GMT\");\n}","import differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport format from '../format/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to format\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {String} the date in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\n */\n\nexport default function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var baseDate = toDate(dirtyBaseDate);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  if (!locale.formatRelative) {\n    throw new RangeError('locale must contain formatRelative property');\n  }\n\n  var diff = differenceInCalendarDays(date, baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var token;\n\n  if (diff < -6) {\n    token = 'other';\n  } else if (diff < -1) {\n    token = 'lastWeek';\n  } else if (diff < 0) {\n    token = 'yesterday';\n  } else if (diff < 1) {\n    token = 'today';\n  } else if (diff < 2) {\n    token = 'tomorrow';\n  } else if (diff < 7) {\n    token = 'nextWeek';\n  } else {\n    token = 'other';\n  }\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var utcBaseDate = subMilliseconds(baseDate, getTimezoneOffsetInMilliseconds(baseDate));\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, options);\n  return format(date, formatStr, options);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Number} unixTime - the given Unix timestamp\n * @returns {Date} the date\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * var result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\n\nexport default function fromUnixTime(dirtyUnixTime) {\n  requiredArgs(1, arguments);\n  var unixTime = toInteger(dirtyUnixTime);\n  return toDate(unixTime * 1000);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * var result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\n\nexport default function getDate(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * var result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nexport default function getDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","import toDate from '../toDate/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\nexport default function getDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isLeapYear\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * var result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\n\nexport default function isLeapYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","import toDate from '../toDate/index.js';\nimport isLeapYear from '../isLeapYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDaysInYear\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in 2012?\n * var result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\n\nexport default function getDaysInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n\n  if (isNaN(date)) {\n    return NaN;\n  }\n\n  return isLeapYear(date) ? 366 : 365;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDecade\n * @category Decade Helpers\n * @summary Get the decade of the given date.\n *\n * @description\n * Get the decade of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year of decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which decade belongs 27 November 1942?\n * var result = getDecade(new Date(1942, 10, 27))\n * //=> 1940\n */\n\nexport default function getDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  return decade;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * var result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\n\nexport default function getHours(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var hours = date.getHours();\n  return hours;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * var result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\n\nexport default function getISODay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}","import toDate from '../toDate/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\n\nexport default function getISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport addWeeks from '../addWeeks/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeeksInYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\n\nexport default function getISOWeeksInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var thisYear = startOfISOWeekYear(dirtyDate);\n  var nextYear = startOfISOWeekYear(addWeeks(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMilliseconds\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\n\nexport default function getMilliseconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = date.getMilliseconds();\n  return milliseconds;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\n\nexport default function getMinutes(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = date.getMinutes();\n  return minutes;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n/**\n * @name getOverlappingDaysInIntervals\n * @category Interval Helpers\n * @summary Get the number of days that overlap in two time intervals\n *\n * @description\n * Get the number of days that overlap in two time intervals\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   getOverlappingDaysInRanges(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   getOverlappingDaysInIntervals(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/Interval}\n * @returns {Number} the number of days that overlap in two time intervals\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals adds 1 for each started overlapping day:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping time intervals returns 0:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> 0\n */\n\nexport default function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n\n  if (!isOverlapping) {\n    return 0;\n  }\n\n  var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;\n  var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;\n  var differenceInMs = overlapEndDate - overlapStartDate;\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getSeconds\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\n\nexport default function getSeconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds();\n  return seconds;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\n\nexport default function getTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}","import getTime from '../getTime/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * var result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\n\nexport default function getUnixTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  return Math.floor(getTime(dirtyDate) / 1000);\n}","import startOfWeek from '../startOfWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the local week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * var result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * var result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * var result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\n\nexport default function getWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getWeekYear from '../getWeekYear/index.js';\nimport startOfWeek from '../startOfWeek/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the start of a week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * var result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  var date = startOfWeek(firstWeek, dirtyOptions);\n  return date;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport startOfWeekYear from '../startOfWeekYear/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * var result = getISOWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport default function getWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getDate from '../getDate/index.js';\nimport getDay from '../getDay/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeekOfMonth\n * @category Week Helpers\n * @summary Get the week of the month of the given date.\n *\n * @description\n * Get the week of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the week of month\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Which week of the month is 9 November 2017?\n * var result = getWeekOfMonth(new Date(2017, 10, 9))\n * //=> 2\n */\n\nexport default function getWeekOfMonth(date, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var currentDayOfMonth = getDate(date);\n\n  if (isNaN(currentDayOfMonth)) {\n    return currentDayOfMonth;\n  }\n\n  var startWeekDay = getDay(startOfMonth(date));\n  var lastDayOfFirstWeek = 0;\n\n  if (startWeekDay >= weekStartsOn) {\n    lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;\n  } else {\n    lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  }\n\n  var weekNumber = 1;\n\n  if (currentDayOfMonth > lastDayOfFirstWeek) {\n    var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n    weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);\n  }\n\n  return weekNumber;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import differenceInCalendarWeeks from '../differenceInCalendarWeeks/index.js';\nimport lastDayOfMonth from '../lastDayOfMonth/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeeksInMonth\n * @category Week Helpers\n * @summary Get the number of calendar weeks a month spans.\n *\n * @description\n * Get the number of calendar weeks the month in the given date spans.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks does February 2015 span?\n * var result = getWeeksInMonth(new Date(2015, 1, 8))\n * //=> 4\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks does July 2017 span?\n * var result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\n * //=> 6\n */\n\nexport default function getWeeksInMonth(date, options) {\n  requiredArgs(1, arguments);\n  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * var result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * var result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import subDays from '../subDays/index.js';\nimport subMonths from '../subMonths/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(toDate(dirtyDate), months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInYears from '../differenceInYears/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInDays from '../differenceInDays/index.js';\nimport differenceInHours from '../differenceInHours/index.js';\nimport differenceInMinutes from '../differenceInMinutes/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport isValid from '../isValid/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toDate from '../toDate/index.js';\nimport sub from '../sub/index.js';\n/**\n * @name intervalToDuration\n * @category Common Helpers\n * @summary Convert interval to duration\n *\n * @description\n * Convert a interval object to a duration object.\n *\n * @param {Interval} interval - the interval to convert to duration\n *\n * @returns {Duration} The duration Object\n * @throws {TypeError} Requires 2 arguments\n * @throws {RangeError} `start` must not be Invalid Date\n * @throws {RangeError} `end` must not be Invalid Date\n *\n * @example\n * // Get the duration between January 15, 1929 and April 4, 1968.\n * intervalToDuration({\n *   start: new Date(1929, 0, 15, 12, 0, 0),\n *   end: new Date(1968, 3, 4, 19, 5, 0)\n * })\n * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }\n */\n\nexport default function intervalToDuration(_ref) {\n  var start = _ref.start,\n      end = _ref.end;\n  requiredArgs(1, arguments);\n  var dateLeft = toDate(start);\n  var dateRight = toDate(end);\n\n  if (!isValid(dateLeft)) {\n    throw new RangeError('Start Date is invalid');\n  }\n\n  if (!isValid(dateRight)) {\n    throw new RangeError('End Date is invalid');\n  }\n\n  var duration = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  var sign = compareAsc(dateLeft, dateRight);\n  duration.years = Math.abs(differenceInYears(dateLeft, dateRight));\n  var remainingMonths = sub(dateLeft, {\n    years: sign * duration.years\n  });\n  duration.months = Math.abs(differenceInMonths(remainingMonths, dateRight));\n  var remainingDays = sub(remainingMonths, {\n    months: sign * duration.months\n  });\n  duration.days = Math.abs(differenceInDays(remainingDays, dateRight));\n  var remainingHours = sub(remainingDays, {\n    days: sign * duration.days\n  });\n  duration.hours = Math.abs(differenceInHours(remainingHours, dateRight));\n  var remainingMinutes = sub(remainingHours, {\n    hours: sign * duration.hours\n  });\n  duration.minutes = Math.abs(differenceInMinutes(remainingMinutes, dateRight));\n  var remainingSeconds = sub(remainingMinutes, {\n    minutes: sign * duration.minutes\n  });\n  duration.seconds = Math.abs(differenceInSeconds(remainingSeconds, dateRight));\n  return duration;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * var result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * var result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * var result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * var result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\n\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","/**\n * @name isExists\n * @category Common Helpers\n * @summary Is the given date exists?\n *\n * @description\n * Checks if the given arguments convert to an existing date.\n *\n * @param {Number} year of the date to check\n * @param {Number} month of the date to check\n * @param {Number} day of the date to check\n * @returns {Boolean} the date exists\n * @throws {TypeError} 3 arguments required\n *\n * @example\n * // For the valid date:\n * var result = isExists(2018, 0, 31)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isExists(2018, 1, 31)\n * //=> false\n */\nexport default function isExists(year, month, day) {\n  if (arguments.length < 3) {\n    throw new TypeError('3 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = new Date(year, month, day);\n  return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFirstDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * var result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\n\nexport default function isFirstDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDate() === 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFriday\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 26 September 2014 Friday?\n * var result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\n\nexport default function isFriday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 5;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\n\nexport default function isFuture(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() > Date.now();\n}","import toDate from '../toDate/index.js';\nimport endOfDay from '../endOfDay/index.js';\nimport endOfMonth from '../endOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCISOWeek from '../getUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCWeek from '../getUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport assign from '../_lib/assign/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport parsers from './_lib/parsers/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   toDate('2016-01-01')\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import parse from '../parse/index.js';\nimport isValid from '../isValid/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isMatch\n * @category Common Helpers\n * @summary validates the date string against given formats\n *\n * @description\n * Return the true if given date is string correct against the given format else\n * will return false.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * isMatch('23 AM', 'HH a')\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `isMatch` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `isMatch` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `isMatch` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `isMatch('50', 'yy') //=> true`\n *\n *    `isMatch('75', 'yy') //=> true`\n *\n *    while `uu` will use the year as is:\n *\n *    `isMatch('50', 'uu') //=> true`\n *\n *    `isMatch('75', 'uu') //=> true`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be checked in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are matched (e.g. when matching string 'January 1st' without a year),\n * the values will be taken from today's using `new Date()` date which works as a context of parsing.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n *\n *\n * @param {String} dateString - the date string to verify\n * @param {String} formatString - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Boolean}\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Match 11 February 2014 from middle-endian format:\n * var result = isMatch('02/11/2014', 'MM/dd/yyyy')\n * //=> true\n *\n * @example\n * // Match 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = isMatch('28-a de februaro', \"do 'de' MMMM\", {\n *   locale: eo\n * })\n * //=> true\n */\n\nexport default function isMatch(dateString, formatString, dirtyOptions) {\n  requiredArgs(2, arguments);\n  return isValid(parse(dateString, formatString, new Date(), dirtyOptions));\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isMonday\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 22 September 2014 Monday?\n * var result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isMonday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isPast(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() < Date.now();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * var result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import startOfHour from '../startOfHour/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameHour\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n * //=> true\n */\n\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}","import startOfWeek from '../startOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n */\n\nexport default function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import isSameWeek from '../isSameWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameISOWeek\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week?\n *\n * @description\n * Are the given dates in the same ISO week?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * var result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n * //=> true\n */\n\nexport default function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {\n    weekStartsOn: 1\n  });\n}","import startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n * //=> true\n */\n\nexport default function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfYear = startOfISOWeekYear(dirtyDateLeft);\n  var dateRightStartOfYear = startOfISOWeekYear(dirtyDateRight);\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\n\nexport default function startOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(0, 0);\n  return date;\n}","import startOfMinute from '../startOfMinute/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameMinute\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\n\nexport default function isSameMinute(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft);\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight);\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import startOfQuarter from '../startOfQuarter/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameQuarter\n * @category Quarter Helpers\n * @summary Are the given dates in the same year quarter?\n *\n * @description\n * Are the given dates in the same year quarter?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * var result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\n * //=> true\n */\n\nexport default function isSameQuarter(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft);\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight);\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfSecond\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\n\nexport default function startOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(0);\n  return date;\n}","import startOfSecond from '../startOfSecond/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameSecond\n * @category Second Helpers\n * @summary Are the given dates in the same second?\n *\n * @description\n * Are the given dates in the same second?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n * // in the same second?\n * var result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n */\n\nexport default function isSameSecond(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft);\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight);\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}","import isSameHour from '../isSameHour/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisHour\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * var result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\n\nexport default function isThisHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameHour(Date.now(), dirtyDate);\n}","import isSameISOWeek from '../isSameISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisISOWeek\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * var result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isThisISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameISOWeek(dirtyDate, Date.now());\n}","import isSameMinute from '../isSameMinute/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisMinute\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\n\nexport default function isThisMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMinute(Date.now(), dirtyDate);\n}","import isSameMonth from '../isSameMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisMonth\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * var result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\n\nexport default function isThisMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMonth(Date.now(), dirtyDate);\n}","import isSameQuarter from '../isSameQuarter/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisQuarter\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * var result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameQuarter(Date.now(), dirtyDate);\n}","import isSameSecond from '../isSameSecond/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisSecond\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\n\nexport default function isThisSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameSecond(Date.now(), dirtyDate);\n}","import isSameWeek from '../isSameWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\n\nexport default function isThisWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return isSameWeek(dirtyDate, Date.now(), options);\n}","import isSameYear from '../isSameYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisYear\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameYear(dirtyDate, Date.now());\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThursday\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * var result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isThursday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 4;\n}","import isSameDay from '../isSameDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import addDays from '../addDays/index.js';\nimport isSameDay from '../isSameDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\n\nexport default function isTomorrow(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, addDays(Date.now(), 1));\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isTuesday\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * var result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\n\nexport default function isTuesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 2;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWednesday\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * var result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\n\nexport default function isWednesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 3;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isWithinRange` to `isWithinInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   isWithinRange(\n *     new Date(2014, 0, 3),\n *     new Date(2014, 0, 1), new Date(2014, 0, 7)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   isWithinInterval(\n *     new Date(2014, 0, 3),\n *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\n\nexport default function isWithinInterval(dirtyDate, dirtyInterval) {\n  requiredArgs(2, arguments);\n  var interval = dirtyInterval || {};\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  return time >= startTime && time <= endTime;\n}","import isSameDay from '../isSameDay/index.js';\nimport subDays from '../subDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\n\nexport default function isYesterday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, subDays(Date.now(), 1));\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfDecade\n * @category Decade Helpers\n * @summary Return the last day of a decade for the given date.\n *\n * @description\n * Return the last day of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a decade for 21 December 2012 21:12:00:\n * var result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))\n * //=> Wed Dec 31 2019 00:00:00\n */\n\nexport default function lastDayOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfWeek\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setHours(0, 0, 0, 0);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import lastDayOfWeek from '../lastDayOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return lastDayOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * var result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\n\nexport default function lastDayOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  date.setDate(date.getDate() - 1);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfQuarter\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the last day of a quarter\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfYear\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\n\nexport default function lastDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/lightFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport isValid from '../isValid/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name lightFormat\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. Unlike `format`,\n * `lightFormat` doesn't use locales and outputs date using the most popular tokens.\n *\n * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   |\n * |---------------------------------|---------|-----------------------------------|\n * | AM, PM                          | a..aaa  | AM, PM                            |\n * |                                 | aaaa    | a.m., p.m.                        |\n * |                                 | aaaaa   | a, p                              |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 |\n * |                                 | yy      | 44, 01, 00, 17                    |\n * |                                 | yyy     | 044, 001, 000, 017                |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |\n * |                                 | MM      | 01, 02, ..., 12                   |\n * | Day of month                    | d       | 1, 2, ..., 31                     |\n * |                                 | dd      | 01, 02, ..., 31                   |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n * |                                 | hh      | 01, 02, ..., 11, 12               |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n * |                                 | HH      | 00, 01, 02, ..., 23               |\n * | Minute                          | m       | 0, 1, ..., 59                     |\n * |                                 | mm      | 00, 01, ..., 59                   |\n * | Second                          | s       | 0, 1, ..., 59                     |\n * |                                 | ss      | 00, 01, ..., 59                   |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |\n * |                                 | SS      | 00, 01, ..., 99                   |\n * |                                 | SSS     | 000, 0001, ..., 999               |\n * |                                 | SSSS    | ...                               |\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * var result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')\n * //=> '2014-02-11'\n */\n\nexport default function lightFormat(dirtyDate, dirtyFormatStr) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var result = formatStr.match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      return formatter(utcDate, substring, null, {});\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `max` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var maxDate = max(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var maxDate = max(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the latest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\n\nexport default function max(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result < currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name min\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `min` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var minDate = min(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var minDate = min(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the earliest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\n\nexport default function min(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result > currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate(), dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    result.setFullYear(dirtyDate.getUTCFullYear());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name parseJSON\n * @category Common Helpers\n * @summary Parse a JSON date string\n *\n * @description\n * Converts a complete ISO date string in UTC time, the typical format for transmitting\n * a date in JSON, to a JavaScript `Date` instance.\n *\n * This is a minimal implementation for converting dates retrieved from a JSON API to\n * a `Date` instance which can be used with other functions in the `date-fns` library.\n * The following formats are supported:\n *\n * - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n * - `2000-03-15T05:20:10Z`: Without milliseconds\n * - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n * - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n * - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n * - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds\n * - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting\n *\n * For convenience and ease of use these other input types are also supported\n * via [toDate]{@link https://date-fns.org/docs/toDate}:\n *\n * - A `Date` instance will be cloned\n * - A `number` will be treated as a timestamp\n *\n * Any other input type or invalid date strings will return an `Invalid Date`.\n *\n * @param {String|Number|Date} argument A fully formed ISO8601 date string to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n */\n\nexport default function parseJSON(argument) {\n  requiredArgs(1, arguments);\n\n  if (typeof argument === 'string') {\n    var parts = argument.match(/(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{0,7}))?(?:Z|\\+00:?00)?/);\n\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));\n    }\n\n    return new Date(NaN);\n  }\n\n  return toDate(argument);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name roundToNearestMinutes\n * @category Minute Helpers\n * @summary Rounds the given date to the nearest minute\n *\n * @description\n * Rounds the given date to the nearest minute (or number of minutes).\n * Rounds up when the given date is exactly between the nearest round minutes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to round\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.\n * @returns {Date} the new date rounded to the closest minute\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.nearestTo` must be between 1 and 30\n *\n * @example\n * // Round 10 July 2014 12:12:34 to nearest minute:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))\n * //=> Thu Jul 10 2014 12:13:00\n *\n * @example\n * // Round 10 July 2014 12:07:30 to nearest quarter hour:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })\n * // rounds up because given date is exactly between 12:00:00 and 12:15:00\n * //=> Thu Jul 10 2014 12:15:00\n */\n\nexport default function roundToNearestMinutes(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only none provided present');\n  }\n\n  var nearestTo = options && 'nearestTo' in options ? toInteger(options.nearestTo) : 1;\n\n  if (nearestTo < 1 || nearestTo > 30) {\n    throw new RangeError('`options.nearestTo` must be between 1 and 30');\n  }\n\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case\n\n  var minutes = date.getMinutes() + seconds / 60;\n  var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;\n  var remainderMinutes = minutes % nearestTo;\n  var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\n\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","import toDate from '../toDate/index.js';\nimport setMonth from '../setMonth/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name set\n * @category Common Helpers\n * @summary Set date values to a given date.\n *\n * @description\n * Set date values to a given date.\n *\n * Sets time values to date from object `values`.\n * A value is not set if it is undefined or null or doesn't exist in `values`.\n *\n * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\n * to use native `Date#setX` methods. If you use this function, you may not want to include the\n * other `setX` functions that date-fns provides if you are concerned about the bundle size.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Object} values - an object with options\n * @param {Number} [values.year] - the number of years to be set\n * @param {Number} [values.month] - the number of months to be set\n * @param {Number} [values.date] - the number of days to be set\n * @param {Number} [values.hours] - the number of hours to be set\n * @param {Number} [values.minutes] - the number of minutes to be set\n * @param {Number} [values.seconds] - the number of seconds to be set\n * @param {Number} [values.milliseconds] - the number of milliseconds to be set\n * @returns {Date} the new date with options set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `values` must be an object\n *\n * @example\n * // Transform 1 September 2014 into 20 October 2015 in a single line:\n * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n * //=> Tue Oct 20 2015 00:00:00\n *\n * @example\n * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\n * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n * //=> Mon Sep 01 2014 12:23:45\n */\n\nexport default function set(dirtyDate, values) {\n  requiredArgs(2, arguments);\n\n  if (typeof values !== 'object' || values === null) {\n    throw new RangeError('values parameter must be an object');\n  }\n\n  var date = toDate(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  if (values.year != null) {\n    date.setFullYear(values.year);\n  }\n\n  if (values.month != null) {\n    date = setMonth(date, values.month);\n  }\n\n  if (values.date != null) {\n    date.setDate(toInteger(values.date));\n  }\n\n  if (values.hours != null) {\n    date.setHours(toInteger(values.hours));\n  }\n\n  if (values.minutes != null) {\n    date.setMinutes(toInteger(values.minutes));\n  }\n\n  if (values.seconds != null) {\n    date.setSeconds(toInteger(values.seconds));\n  }\n\n  if (values.milliseconds != null) {\n    date.setMilliseconds(toInteger(values.milliseconds));\n  }\n\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDate\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * var result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function setDate(dirtyDate, dirtyDayOfMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = toInteger(dirtyDayOfMonth);\n  date.setDate(dayOfMonth);\n  return date;\n}","import addDays from '../addDays/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate, options);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var delta = 7 - weekStartsOn;\n  var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;\n  return addDays(date, diff, options);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDayOfYear\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * var result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\n\nexport default function setDayOfYear(dirtyDate, dirtyDayOfYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfYear = toInteger(dirtyDayOfYear);\n  date.setMonth(0);\n  date.setDate(dayOfYear);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setHours\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\n\nexport default function setHours(dirtyDate, dirtyHours) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var hours = toInteger(dirtyHours);\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport addDays from '../addDays/index.js';\nimport getISODay from '../getISODay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = getISODay(date);\n  var diff = day - currentDay;\n  return addDays(date, diff);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getISOWeek from '../getISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * var result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getISOWeek(date) - isoWeek;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMilliseconds\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\n\nexport default function setMilliseconds(dirtyDate, dirtyMilliseconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = toInteger(dirtyMilliseconds);\n  date.setMilliseconds(milliseconds);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMinutes\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\n\nexport default function setMinutes(dirtyDate, dirtyMinutes) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = toInteger(dirtyMinutes);\n  date.setMinutes(minutes);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport setMonth from '../setMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setQuarter\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * var result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\n\nexport default function setQuarter(dirtyDate, dirtyQuarter) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = toInteger(dirtyQuarter);\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1;\n  var diff = quarter - oldQuarter;\n  return setMonth(date, date.getMonth() + diff * 3);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setSeconds\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\n\nexport default function setSeconds(dirtyDate, dirtySeconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = toInteger(dirtySeconds);\n  date.setSeconds(seconds);\n  return date;\n}","import getWeek from '../getWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} week - the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * var result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * var result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\n\nexport default function setWeek(dirtyDate, dirtyWeek, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getWeek(date, dirtyOptions) - week;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport startOfWeekYear from '../startOfWeekYear/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Set the local week-numbering year to the given date.\n *\n * @description\n * Set the local week-numbering year to the given date,\n * saving the week number and the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} weekYear - the local week-numbering year of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week-numbering year set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010 with default options:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004)\n * //=> Sat Jan 03 2004 00:00:00\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010,\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setWeekYear(dirtyDate, dirtyWeekYear, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var date = toDate(dirtyDate);\n  var weekYear = toInteger(dirtyWeekYear);\n  var diff = differenceInCalendarDays(date, startOfWeekYear(date, dirtyOptions));\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  date = startOfWeekYear(firstWeek, dirtyOptions);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\n\nexport default function setYear(dirtyDate, dirtyYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var year = toInteger(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  date.setFullYear(year);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDecade\n * @category Decade Helpers\n * @summary Return the start of a decade for the given date.\n *\n * @description\n * Return the start of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a decade for 21 October 2015 00:00:00:\n * var result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))\n * //=> Jan 01 2010 00:00:00\n */\n\nexport default function startOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","/**\n * @name startOfTomorrow\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n * @pure false\n *\n * @description\n * Return the start of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nexport default function startOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","/**\n * @name startOfYesterday\n * @category Day Helpers\n * @summary Return the start of yesterday.\n * @pure false\n *\n * @description\n * Return the start of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nexport default function startOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addBusinessDays from '../addBusinessDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subBusinessDays\n * @category Day Helpers\n * @summary Substract the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Substract 10 business days from 1 September 2014:\n * var result = subBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function subBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addBusinessDays(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addHours from '../addHours/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subHours\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\n\nexport default function subHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addHours(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMinutes from '../addMinutes/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMinutes\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\n\nexport default function subMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMinutes(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addQuarters from '../addQuarters/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subQuarters\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * var result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\n\nexport default function subQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addQuarters(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addSeconds from '../addSeconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subSeconds\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\n\nexport default function subSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addSeconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addWeeks from '../addWeeks/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subWeeks\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * var result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\n\nexport default function subWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addWeeks(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addYears from '../addYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\n\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","/**\n *  Maximum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n *  Minimum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\n\nexport var minTime = -maxTime;","// This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.\nexport { default as add } from './add/index.js';\nexport { default as addBusinessDays } from './addBusinessDays/index.js';\nexport { default as addDays } from './addDays/index.js';\nexport { default as addHours } from './addHours/index.js';\nexport { default as addISOWeekYears } from './addISOWeekYears/index.js';\nexport { default as addMilliseconds } from './addMilliseconds/index.js';\nexport { default as addMinutes } from './addMinutes/index.js';\nexport { default as addMonths } from './addMonths/index.js';\nexport { default as addQuarters } from './addQuarters/index.js';\nexport { default as addSeconds } from './addSeconds/index.js';\nexport { default as addWeeks } from './addWeeks/index.js';\nexport { default as addYears } from './addYears/index.js';\nexport { default as areIntervalsOverlapping } from './areIntervalsOverlapping/index.js';\nexport { default as closestIndexTo } from './closestIndexTo/index.js';\nexport { default as closestTo } from './closestTo/index.js';\nexport { default as compareAsc } from './compareAsc/index.js';\nexport { default as compareDesc } from './compareDesc/index.js';\nexport { default as differenceInBusinessDays } from './differenceInBusinessDays/index.js';\nexport { default as differenceInCalendarDays } from './differenceInCalendarDays/index.js';\nexport { default as differenceInCalendarISOWeekYears } from './differenceInCalendarISOWeekYears/index.js';\nexport { default as differenceInCalendarISOWeeks } from './differenceInCalendarISOWeeks/index.js';\nexport { default as differenceInCalendarMonths } from './differenceInCalendarMonths/index.js';\nexport { default as differenceInCalendarQuarters } from './differenceInCalendarQuarters/index.js';\nexport { default as differenceInCalendarWeeks } from './differenceInCalendarWeeks/index.js';\nexport { default as differenceInCalendarYears } from './differenceInCalendarYears/index.js';\nexport { default as differenceInDays } from './differenceInDays/index.js';\nexport { default as differenceInHours } from './differenceInHours/index.js';\nexport { default as differenceInISOWeekYears } from './differenceInISOWeekYears/index.js';\nexport { default as differenceInMilliseconds } from './differenceInMilliseconds/index.js';\nexport { default as differenceInMinutes } from './differenceInMinutes/index.js';\nexport { default as differenceInMonths } from './differenceInMonths/index.js';\nexport { default as differenceInQuarters } from './differenceInQuarters/index.js';\nexport { default as differenceInSeconds } from './differenceInSeconds/index.js';\nexport { default as differenceInWeeks } from './differenceInWeeks/index.js';\nexport { default as differenceInYears } from './differenceInYears/index.js';\nexport { default as eachDayOfInterval } from './eachDayOfInterval/index.js';\nexport { default as eachHourOfInterval } from './eachHourOfInterval/index.js';\nexport { default as eachMonthOfInterval } from './eachMonthOfInterval/index.js';\nexport { default as eachQuarterOfInterval } from './eachQuarterOfInterval/index.js';\nexport { default as eachWeekOfInterval } from './eachWeekOfInterval/index.js';\nexport { default as eachWeekendOfInterval } from './eachWeekendOfInterval/index.js';\nexport { default as eachWeekendOfMonth } from './eachWeekendOfMonth/index.js';\nexport { default as eachWeekendOfYear } from './eachWeekendOfYear/index.js';\nexport { default as eachYearOfInterval } from './eachYearOfInterval/index.js';\nexport { default as endOfDay } from './endOfDay/index.js';\nexport { default as endOfDecade } from './endOfDecade/index.js';\nexport { default as endOfHour } from './endOfHour/index.js';\nexport { default as endOfISOWeek } from './endOfISOWeek/index.js';\nexport { default as endOfISOWeekYear } from './endOfISOWeekYear/index.js';\nexport { default as endOfMinute } from './endOfMinute/index.js';\nexport { default as endOfMonth } from './endOfMonth/index.js';\nexport { default as endOfQuarter } from './endOfQuarter/index.js';\nexport { default as endOfSecond } from './endOfSecond/index.js';\nexport { default as endOfToday } from './endOfToday/index.js';\nexport { default as endOfTomorrow } from './endOfTomorrow/index.js';\nexport { default as endOfWeek } from './endOfWeek/index.js';\nexport { default as endOfYear } from './endOfYear/index.js';\nexport { default as endOfYesterday } from './endOfYesterday/index.js';\nexport { default as format } from './format/index.js';\nexport { default as formatDistance } from './formatDistance/index.js';\nexport { default as formatDistanceStrict } from './formatDistanceStrict/index.js';\nexport { default as formatDistanceToNow } from './formatDistanceToNow/index.js';\nexport { default as formatDistanceToNowStrict } from './formatDistanceToNowStrict/index.js';\nexport { default as formatDuration } from './formatDuration/index.js';\nexport { default as formatISO } from './formatISO/index.js';\nexport { default as formatISO9075 } from './formatISO9075/index.js';\nexport { default as formatISODuration } from './formatISODuration/index.js';\nexport { default as formatRFC3339 } from './formatRFC3339/index.js';\nexport { default as formatRFC7231 } from './formatRFC7231/index.js';\nexport { default as formatRelative } from './formatRelative/index.js';\nexport { default as fromUnixTime } from './fromUnixTime/index.js';\nexport { default as getDate } from './getDate/index.js';\nexport { default as getDay } from './getDay/index.js';\nexport { default as getDayOfYear } from './getDayOfYear/index.js';\nexport { default as getDaysInMonth } from './getDaysInMonth/index.js';\nexport { default as getDaysInYear } from './getDaysInYear/index.js';\nexport { default as getDecade } from './getDecade/index.js';\nexport { default as getHours } from './getHours/index.js';\nexport { default as getISODay } from './getISODay/index.js';\nexport { default as getISOWeek } from './getISOWeek/index.js';\nexport { default as getISOWeekYear } from './getISOWeekYear/index.js';\nexport { default as getISOWeeksInYear } from './getISOWeeksInYear/index.js';\nexport { default as getMilliseconds } from './getMilliseconds/index.js';\nexport { default as getMinutes } from './getMinutes/index.js';\nexport { default as getMonth } from './getMonth/index.js';\nexport { default as getOverlappingDaysInIntervals } from './getOverlappingDaysInIntervals/index.js';\nexport { default as getQuarter } from './getQuarter/index.js';\nexport { default as getSeconds } from './getSeconds/index.js';\nexport { default as getTime } from './getTime/index.js';\nexport { default as getUnixTime } from './getUnixTime/index.js';\nexport { default as getWeek } from './getWeek/index.js';\nexport { default as getWeekOfMonth } from './getWeekOfMonth/index.js';\nexport { default as getWeekYear } from './getWeekYear/index.js';\nexport { default as getWeeksInMonth } from './getWeeksInMonth/index.js';\nexport { default as getYear } from './getYear/index.js';\nexport { default as intervalToDuration } from './intervalToDuration/index.js';\nexport { default as isAfter } from './isAfter/index.js';\nexport { default as isBefore } from './isBefore/index.js';\nexport { default as isDate } from './isDate/index.js';\nexport { default as isEqual } from './isEqual/index.js';\nexport { default as isExists } from './isExists/index.js';\nexport { default as isFirstDayOfMonth } from './isFirstDayOfMonth/index.js';\nexport { default as isFriday } from './isFriday/index.js';\nexport { default as isFuture } from './isFuture/index.js';\nexport { default as isLastDayOfMonth } from './isLastDayOfMonth/index.js';\nexport { default as isLeapYear } from './isLeapYear/index.js';\nexport { default as isMatch } from './isMatch/index.js';\nexport { default as isMonday } from './isMonday/index.js';\nexport { default as isPast } from './isPast/index.js';\nexport { default as isSameDay } from './isSameDay/index.js';\nexport { default as isSameHour } from './isSameHour/index.js';\nexport { default as isSameISOWeek } from './isSameISOWeek/index.js';\nexport { default as isSameISOWeekYear } from './isSameISOWeekYear/index.js';\nexport { default as isSameMinute } from './isSameMinute/index.js';\nexport { default as isSameMonth } from './isSameMonth/index.js';\nexport { default as isSameQuarter } from './isSameQuarter/index.js';\nexport { default as isSameSecond } from './isSameSecond/index.js';\nexport { default as isSameWeek } from './isSameWeek/index.js';\nexport { default as isSameYear } from './isSameYear/index.js';\nexport { default as isSaturday } from './isSaturday/index.js';\nexport { default as isSunday } from './isSunday/index.js';\nexport { default as isThisHour } from './isThisHour/index.js';\nexport { default as isThisISOWeek } from './isThisISOWeek/index.js';\nexport { default as isThisMinute } from './isThisMinute/index.js';\nexport { default as isThisMonth } from './isThisMonth/index.js';\nexport { default as isThisQuarter } from './isThisQuarter/index.js';\nexport { default as isThisSecond } from './isThisSecond/index.js';\nexport { default as isThisWeek } from './isThisWeek/index.js';\nexport { default as isThisYear } from './isThisYear/index.js';\nexport { default as isThursday } from './isThursday/index.js';\nexport { default as isToday } from './isToday/index.js';\nexport { default as isTomorrow } from './isTomorrow/index.js';\nexport { default as isTuesday } from './isTuesday/index.js';\nexport { default as isValid } from './isValid/index.js';\nexport { default as isWednesday } from './isWednesday/index.js';\nexport { default as isWeekend } from './isWeekend/index.js';\nexport { default as isWithinInterval } from './isWithinInterval/index.js';\nexport { default as isYesterday } from './isYesterday/index.js';\nexport { default as lastDayOfDecade } from './lastDayOfDecade/index.js';\nexport { default as lastDayOfISOWeek } from './lastDayOfISOWeek/index.js';\nexport { default as lastDayOfISOWeekYear } from './lastDayOfISOWeekYear/index.js';\nexport { default as lastDayOfMonth } from './lastDayOfMonth/index.js';\nexport { default as lastDayOfQuarter } from './lastDayOfQuarter/index.js';\nexport { default as lastDayOfWeek } from './lastDayOfWeek/index.js';\nexport { default as lastDayOfYear } from './lastDayOfYear/index.js';\nexport { default as lightFormat } from './lightFormat/index.js';\nexport { default as max } from './max/index.js';\nexport { default as min } from './min/index.js';\nexport { default as parse } from './parse/index.js';\nexport { default as parseISO } from './parseISO/index.js';\nexport { default as parseJSON } from './parseJSON/index.js';\nexport { default as roundToNearestMinutes } from './roundToNearestMinutes/index.js';\nexport { default as set } from './set/index.js';\nexport { default as setDate } from './setDate/index.js';\nexport { default as setDay } from './setDay/index.js';\nexport { default as setDayOfYear } from './setDayOfYear/index.js';\nexport { default as setHours } from './setHours/index.js';\nexport { default as setISODay } from './setISODay/index.js';\nexport { default as setISOWeek } from './setISOWeek/index.js';\nexport { default as setISOWeekYear } from './setISOWeekYear/index.js';\nexport { default as setMilliseconds } from './setMilliseconds/index.js';\nexport { default as setMinutes } from './setMinutes/index.js';\nexport { default as setMonth } from './setMonth/index.js';\nexport { default as setQuarter } from './setQuarter/index.js';\nexport { default as setSeconds } from './setSeconds/index.js';\nexport { default as setWeek } from './setWeek/index.js';\nexport { default as setWeekYear } from './setWeekYear/index.js';\nexport { default as setYear } from './setYear/index.js';\nexport { default as startOfDay } from './startOfDay/index.js';\nexport { default as startOfDecade } from './startOfDecade/index.js';\nexport { default as startOfHour } from './startOfHour/index.js';\nexport { default as startOfISOWeek } from './startOfISOWeek/index.js';\nexport { default as startOfISOWeekYear } from './startOfISOWeekYear/index.js';\nexport { default as startOfMinute } from './startOfMinute/index.js';\nexport { default as startOfMonth } from './startOfMonth/index.js';\nexport { default as startOfQuarter } from './startOfQuarter/index.js';\nexport { default as startOfSecond } from './startOfSecond/index.js';\nexport { default as startOfToday } from './startOfToday/index.js';\nexport { default as startOfTomorrow } from './startOfTomorrow/index.js';\nexport { default as startOfWeek } from './startOfWeek/index.js';\nexport { default as startOfWeekYear } from './startOfWeekYear/index.js';\nexport { default as startOfYear } from './startOfYear/index.js';\nexport { default as startOfYesterday } from './startOfYesterday/index.js';\nexport { default as sub } from './sub/index.js';\nexport { default as subBusinessDays } from './subBusinessDays/index.js';\nexport { default as subDays } from './subDays/index.js';\nexport { default as subHours } from './subHours/index.js';\nexport { default as subISOWeekYears } from './subISOWeekYears/index.js';\nexport { default as subMilliseconds } from './subMilliseconds/index.js';\nexport { default as subMinutes } from './subMinutes/index.js';\nexport { default as subMonths } from './subMonths/index.js';\nexport { default as subQuarters } from './subQuarters/index.js';\nexport { default as subSeconds } from './subSeconds/index.js';\nexport { default as subWeeks } from './subWeeks/index.js';\nexport { default as subYears } from './subYears/index.js';\nexport { default as toDate } from './toDate/index.js';\nexport * from './constants/index.js';","import { addMinutes } from \"date-fns\";\r\nimport format from \"date-fns/format\";\r\nimport { createDate } from \"./createDate\";\r\n\r\nexport const openingHours = {\r\n\tGlensgaich: {\r\n\t\tMon: [\"17:00\", \"22:00\"],\r\n\t\tTue: [\"17:00\", \"22:00\"],\r\n\t\tWed: [\"17:00\", \"22:00\"],\r\n\t\tThu: [\"17:00\", \"22:00\"],\r\n\t\tFri: [\"17:00\", \"22:00\"],\r\n\t\tSat: [\"12:00\", \"22:00\"],\r\n\t\tSun: [\"12:00\", \"21:00\"],\r\n\t},\r\n\tTanygirisau: {\r\n\t\tMon: [\"17:00\", \"22:00\"],\r\n\t\tTue: [\"17:00\", \"22:00\"],\r\n\t\tWed: [\"17:00\", \"22:00\"],\r\n\t\tThu: [\"17:00\", \"22:00\"],\r\n\t\tFri: [\"17:00\", \"22:00\"],\r\n\t\tSat: [\"12:00\", \"22:00\"],\r\n\t\tSun: [\"12:00\", \"21:00\"],\r\n\t},\r\n};\r\n\r\nexport const getAvailableTimes = (date, restaurant) => {\r\n\tconst times = [];\r\n\tlet day = format(date, \"eee\");\r\n\tconsole.log(date);\r\n\tlet [opening, closing] = openingHours[restaurant][day];\r\n\topening = date.setHours(opening.substr(0, 2), opening.substr(3));\r\n\tclosing = date.setHours(closing.substr(0, 2), closing.substr(3));\r\n\tlet current = opening;\r\n\twhile (current <= closing) {\r\n\t\ttimes.push(format(current, \"HH:mm\"));\r\n\t\tcurrent = addMinutes(current, 30);\r\n\t}\r\n\treturn times;\r\n};\r\n\r\nexport const setAvailableTimes = (date, restaurant) => {\r\n\tif (!restaurant || !date) return;\r\n\tif (typeof date === \"string\") date = createDate(date);\r\n\tconst slots = getAvailableTimes(date, restaurant);\r\n\ttime.innerText = \"\";\r\n\tfor (const slot of slots) {\r\n\t\tconst option = document.createElement(\"option\");\r\n\t\toption.innerText = slot;\r\n\t\toption.value = slot;\r\n\t\ttime.append(option);\r\n\t}\r\n};\r\n","import {\r\n\tfindBookingfromURL,\r\n\tfindBookingfromForm,\r\n} from \"./utilities/booking/findBooking\";\r\nimport { editForm } from \"./utilities/booking/editForm\";\r\nimport { fetch } from \"./utilities/booking/fetch\";\r\nimport { DELETE_BOOKING, PUT_BOOKING } from \"./utilities/booking/types\";\r\nimport { setAvailableDates } from \"./utilities/booking/availableDates\";\r\nimport { handleSubmit } from \"./utilities/booking/submitBooking\";\r\nimport {\r\n\tgetAvailableParty,\r\n\tsetAvailableParty,\r\n} from \"./utilities/booking/availableParty\";\r\nimport { setAvailableTimes } from \"./utilities/booking/availableTimes\";\r\nimport { createDate } from \"./utilities/booking/createDate\";\r\n\r\nsetAvailableDates(Date.now());\r\nsetAvailableTimes(createDate(\"14/11/2020\"), restaurant.value);\r\nsetAvailableParty();\r\n\r\n//edit form\r\neditBtn.onclick = (e) => {\r\n\teditForm(e);\r\n\tgetAvailableParty(restaurant.value, day.value, time.value, id.value);\r\n};\r\n\r\n//change select options when restaurant changes\r\nrestaurant.onchange = () => {\r\n\tif (day.value) setAvailableTimes(day.value, restaurant.value);\r\n\tif (day.value && time.value)\r\n\t\tgetAvailableParty(restaurant.value, day.value, time.value);\r\n};\r\n\r\n//change select options when day changes\r\nday.onchange = () => {\r\n\tif (restaurant.value) setAvailableTimes(day.value, restaurant.value);\r\n\tif (restaurant.value && time.value)\r\n\t\tgetAvailableParty(restaurant.value, day.value, time.value);\r\n};\r\n\r\n//change select options when time changes\r\ntime.onchange = () => {\r\n\tif (restaurant.value && day.value)\r\n\t\tgetAvailableParty(restaurant.value, day.value, time.value);\r\n};\r\n\r\n//booking CRUD\r\n//get existing booking\r\nfindBookingfromURL();\r\nfindBtn.onclick = (e) => findBookingfromForm(e);\r\n\r\n// delete booking\r\ndeleteBtn.onclick = () =>\r\n\tfetch(DELETE_BOOKING, { id: document.querySelector(\"#id\").value });\r\n\r\n//update booking\r\ndocument.querySelector(\".putBookForm\").onsubmit = (e) =>\r\n\thandleSubmit(e, PUT_BOOKING, \".bookBtn\");\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}